Differences in moonraker/components/octoprint_compat.py:

- Lines with differences: 79 lines in 9 blocks

Detailed Differences:

--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/home/mks/moonraker/moonraker/components/octoprint_compat.py	2022-07-25 05:53:30.906869297 -0400
+++ /home/mks/firmware_comparison/downloads/moonraker/moonraker/components/octoprint_compat.py	2024-10-08 17:45:43.667278026 -0400
@@ -6,6 +6,7 @@
 
 from __future__ import annotations
 import logging
+from ..common import RequestType, TransportType, KlippyState
 
 # Annotation imports
 from typing import (
@@ -15,8 +16,9 @@
     List,
 )
 if TYPE_CHECKING:
-    from confighelper import ConfigHelper
-    from websockets import WebRequest
+    from .klippy_connection import KlippyConnection
+    from ..confighelper import ConfigHelper
+    from ..common import WebRequest
     from .klippy_apis import KlippyAPI as APIComp
     from .file_manager.file_manager import FileManager
     from .job_queue import JobQueue
@@ -65,22 +67,27 @@
 
         # Version & Server information
         self.server.register_endpoint(
-            '/api/version', ['GET'], self._get_version,
-            transports=['http'], wrap_result=False)
+            '/api/version', RequestType.GET, self._get_version,
+            transports=TransportType.HTTP, wrap_result=False
+        )
         self.server.register_endpoint(
-            '/api/server', ['GET'], self._get_server,
-            transports=['http'], wrap_result=False)
+            '/api/server', RequestType.GET, self._get_server,
+            transports=TransportType.HTTP, wrap_result=False
+        )
 
         # Login, User & Settings
         self.server.register_endpoint(
-            '/api/login', ['POST'], self._post_login_user,
-            transports=['http'], wrap_result=False)
+            '/api/login', RequestType.POST, self._post_login_user,
+            transports=TransportType.HTTP, wrap_result=False
+        )
         self.server.register_endpoint(
-            '/api/currentuser', ['GET'], self._post_login_user,
-            transports=['http'], wrap_result=False)
+            '/api/currentuser', RequestType.GET, self._post_login_user,
+            transports=TransportType.HTTP, wrap_result=False
+        )
         self.server.register_endpoint(
-            '/api/settings', ['GET'], self._get_settings,
-            transports=['http'], wrap_result=False)
+            '/api/settings', RequestType.GET, self._get_settings,
+            transports=TransportType.HTTP, wrap_result=False
+        )
 
         # File operations
         # Note that file upload is handled in file_manager.py
@@ -88,30 +95,34 @@
 
         # Job operations
         self.server.register_endpoint(
-            '/api/job', ['GET'], self._get_job,
-            transports=['http'], wrap_result=False)
+            '/api/job', RequestType.GET, self._get_job,
+            transports=TransportType.HTTP, wrap_result=False
+        )
         # TODO: start/cancel/restart/pause jobs
 
         # Printer operations
         self.server.register_endpoint(
-            '/api/printer', ['GET'], self._get_printer,
-            transports=['http'], wrap_result=False)
+            '/api/printer', RequestType.GET, self._get_printer,
+            transports=TransportType.HTTP, wrap_result=False)
         self.server.register_endpoint(
-            '/api/printer/command', ['POST'], self._post_command,
-            transports=['http'], wrap_result=False)
+            '/api/printer/command', RequestType.POST, self._post_command,
+            transports=TransportType.HTTP, wrap_result=False
+        )
         # TODO: head/tool/bed/chamber specific read/issue
 
         # Printer profiles
         self.server.register_endpoint(
-            '/api/printerprofiles', ['GET'], self._get_printerprofiles,
-            transports=['http'], wrap_result=False)
+            '/api/printerprofiles', RequestType.GET, self._get_printerprofiles,
+            transports=TransportType.HTTP, wrap_result=False
+        )
 
         # Upload Handlers
         self.server.register_upload_handler(
             "/api/files/local", location_prefix="api/files/moonraker")
         self.server.register_endpoint(
-            "/api/files/moonraker/(?P<relative_path>.+)", ['POST'],
-            self._select_file, transports=['http'], wrap_result=False)
+            "/api/files/moonraker/(?P<relative_path>.+)", RequestType.POST,
+            self._select_file, transports=TransportType.HTTP, wrap_result=False
+        )
 
         # System
         # TODO: shutdown/reboot/restart operations
@@ -143,10 +154,11 @@
                 data.update(status[heater_name])
 
     def printer_state(self) -> str:
-        klippy_state = self.server.get_klippy_state()
-        if klippy_state in ["disconnected", "startup"]:
+        kconn: KlippyConnection = self.server.lookup_component("klippy_connection")
+        klippy_state = kconn.state
+        if not klippy_state.startup_complete():
             return 'Offline'
-        elif klippy_state != 'ready':
+        elif klippy_state != KlippyState.READY:
             return 'Error'
         return {
             'standby': 'Operational',
@@ -192,11 +204,11 @@
         """
         Server status
         """
-        klippy_state = self.server.get_klippy_state()
+        kconn: KlippyConnection = self.server.lookup_component("klippy_connection")
+        klippy_state = kconn.state
         return {
             'server': OCTO_VERSION,
-            'safemode': (
-                None if klippy_state == 'ready' else 'settings')
+            'safemode': None if klippy_state == KlippyState.READY else 'settings'
         }
 
     async def _post_login_user(self,
@@ -355,12 +367,12 @@
     async def _select_file(self,
                            web_request: WebRequest
                            ) -> None:
-        command: str = web_request.get('command')
-        rel_path: str = web_request.get('relative_path')
+        command: str = web_request.get_str('command')
+        rel_path: str = web_request.get_str('relative_path')
         root, filename = rel_path.strip("/").split("/", 1)
         fmgr: FileManager = self.server.lookup_component('file_manager')
         if command == "select":
-            start_print: bool = web_request.get('print', False)
+            start_print: bool = web_request.get_boolean('print', False)
             if not start_print:
                 # No-op, selecting a file has no meaning in Moonraker
                 return
@@ -376,9 +388,10 @@
             except self.server.error:
                 pstate = "not_avail"
             started: bool = False
+            user = web_request.get_current_user()
             if pstate not in ["printing", "paused", "not_avail"]:
                 try:
-                    await self.klippy_apis.start_print(filename)
+                    await self.klippy_apis.start_print(filename, user=user)
                 except self.server.error:
                     started = False
                 else:
@@ -388,7 +401,7 @@
                 if fmgr.upload_queue_enabled():
                     job_queue: JobQueue = self.server.lookup_component(
                         'job_queue')
-                    await job_queue.queue_job(filename, check_exists=False)
+                    await job_queue.queue_job(filename, check_exists=False, user=user)
                     logging.debug(f"Job '{filename}' queued via OctoPrint API")
                 else:
                     raise self.server.error("Conflict", 409)
