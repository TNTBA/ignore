Differences in moonraker/components/secrets.py:

- Lines with differences: 31 lines in 4 blocks

Detailed Differences:

--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/home/mks/moonraker/moonraker/components/secrets.py	2022-07-25 05:53:30.910869307 -0400
+++ /home/mks/firmware_comparison/downloads/moonraker/moonraker/components/secrets.py	2024-10-08 17:45:43.667278026 -0400
@@ -7,7 +7,7 @@
 import pathlib
 import logging
 import configparser
-import json
+from ..utils import json_wrapper as jsonw
 from typing import (
     TYPE_CHECKING,
     Dict,
@@ -15,22 +15,21 @@
     Any
 )
 if TYPE_CHECKING:
-    from confighelper import ConfigHelper
+    from ..confighelper import ConfigHelper
 
 class Secrets:
     def __init__(self, config: ConfigHelper) -> None:
         server = config.get_server()
-        self.secrets_file: Optional[pathlib.Path] = None
-        path: Optional[str] = config.get('secrets_path', None)
+        path: Optional[str] = config.get("secrets_path", None, deprecate=True)
+        app_args = server.get_app_args()
+        data_path = app_args["data_path"]
+        fpath = pathlib.Path(data_path).joinpath("moonraker.secrets")
+        if not fpath.is_file() and path is not None:
+            fpath = pathlib.Path(path).expanduser().resolve()
         self.type = "invalid"
         self.values: Dict[str, Any] = {}
-        if path is not None:
-            self.secrets_file = pathlib.Path(path).expanduser().resolve()
-            if not self.secrets_file.is_file():
-                server.add_warning(
-                    "[secrets]: option 'secrets_path', file does not exist: "
-                    f"'{self.secrets_file}'")
-                return
+        self.secrets_file = fpath
+        if fpath.is_file():
             data = self.secrets_file.read_text()
             vals = self._parse_json(data)
             if vals is not None:
@@ -52,10 +51,17 @@
                 self.type = "ini"
             logging.debug(f"[secrets]: Loaded {self.type} file: "
                           f"{self.secrets_file}")
+        elif path is not None:
+            server.add_warning(
+                "[secrets]: option 'secrets_path', file does not exist: "
+                f"'{self.secrets_file}'")
         else:
             logging.debug(
                 "[secrets]: Option `secrets_path` not supplied")
 
+    def get_secrets_file(self) -> pathlib.Path:
+        return self.secrets_file
+
     def _parse_ini(self, data: str) -> Optional[Dict[str, Any]]:
         try:
             cfg = configparser.ConfigParser(interpolation=None)
@@ -66,8 +72,8 @@
 
     def _parse_json(self, data: str) -> Optional[Dict[str, Any]]:
         try:
-            return json.loads(data)
-        except json.JSONDecodeError:
+            return jsonw.loads(data)
+        except jsonw.JSONDecodeError:
             return None
 
     def get_type(self) -> str:
