Differences in tools/uninstall.sh:

- Lines with differences: 310 lines in 2 blocks

Detailed Differences:

--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/home/mks/crowsnest/tools/uninstall.sh	2023-12-15 01:50:44.414398135 -0500
+++ /home/mks/firmware_comparison/downloads/crowsnest/tools/uninstall.sh	2024-10-08 17:45:29.818228183 -0400
@@ -1,8 +1,9 @@
 #!/usr/bin/env bash
+
 #### crowsnest - A webcam Service for multiple Cams and Stream Services.
 ####
 #### Written by Stephan Wendel aka KwadFan <me@stephanwe.de>
-#### Copyright 2021 - 2022
+#### Copyright 2021 - till today
 #### https://github.com/mainsail-crew/crowsnest
 ####
 #### This File is distributed under GPLv3
@@ -10,194 +11,260 @@
 
 # shellcheck enable=require-variable-braces
 
-### Disable SC2317 due Trap usage
-# shellcheck disable=SC2317
-
-## Exit on Error
+# Exit on errors
 set -Ee
 
-## Debug
+# Debug
 # set -x
 
 # Global Vars
-TITLE="\e[31mcrowsnest\e[0m - A webcam daemon for multiple Cams and stream services."
-CN_CONFIG_ENVPATH="$(find "${HOME}" -name "crowsnest.env")"
-
-# Message Vars
-CN_OK="\e[32mOK\e[0m"
-CN_SK="\e[33mSKIPPED\e[0m"
-
-### Check non-root
-if [[ ${UID} = '0' ]]; then
-    echo -e "\n\tYOU DONT NEED TO RUN UNINSTALLER AS ROOT!"
-    echo -e "\tYou will be prompted for 'sudo' passwd"
-    exit 1
-fi
-
-### Functions
+TITLE="\e[31mcrowsnest\e[0m - A webcam daemon for multiple cams and stream services."
+SRC_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd -P)"
+SERVICE_FILE="/etc/systemd/system/crowsnest.service"
+
+
+# Global func
+msg() {
+    echo -e "${1}"
+}
+
+status_msg() {
+    local msg status
+    msg="${1}"
+    status="${2}"
+    echo -en "${msg}\r"
+    if [[ "${status}" == "0" ]]; then
+        echo -e "${msg} [\e[32mOK\e[0m]"
+    fi
+    if [[ "${status}" == "1" ]]; then
+        echo -e "${msg} [\e[31mFAILED\e[0m]"
+        error_msg
+        exit 1
+    fi
+    if [[ "${status}" == "2" ]]; then
+        echo -e "${msg} [\e[33mSKIPPED\e[0m]"
+    fi
+}
 
-### Messages
-### Welcome Message
+## Messages
 welcome_msg() {
-    echo -e "${TITLE}\n"
-    echo -e "\t\e[34mAhoi!\e[0m"
-    echo -e "\tTo sad that you want to uninstall crowsnest :("
-    echo -e "\tThis will take a while ... "
-    echo -e "\tPlease reboot after installation has finished.\n"
+    msg "${TITLE}\n"
+    msg "\t\e[34mAhoi!\e[0m"
+    msg "\tTo sad that you want to uninstall crowsnest :("
+    msg "\tThis will take a while ... "
+    msg "\tPlease reboot after uninstallation has finished.\n"
     sleep 1
 }
 
 goodbye_msg() {
-    echo -e "Please remove manually the 'crowsnest' folder in ${HOME}\n"
-    echo -e "\tRemove [update manager crowsnest] section from moonraker.conf,before reboot!\n"
-    echo -e "After that is done, please reboot!\nGoodBye...\n"
-}
-
-### General
-## These two functions are reused from custompios common.sh
-## Credits to guysoft!
-## https://github.com/guysoft/CustomPiOS
-
-install_cleanup_trap() {
-    # kills all child processes of the current process on SIGINT or SIGTERM
-    trap 'cleanup' SIGINT SIGTERM
+    msg "Please remove manually the 'crowsnest' folder in ${HOME}\n"
+    msg "\tRemove [update manager crowsnest] section from moonraker.conf,before reboot!\n"
+    msg "After that is done, please reboot!\nGoodBye...\n"
 }
 
-cleanup() {
-    # make sure that all child processed die when we die
-    echo -e "Killed by user ...\r\nGoodBye ...\r"
-    # shellcheck disable=2046
-    [ -n "$(jobs -pr)" ] && kill $(jobs -pr) && sleep 5 && kill -9 $(jobs -pr)
-}
-##
-
-err_exit() {
-    if [ "${1}" != "0" ]; then
-        echo -e "ERROR: Error ${1} occured on line ${2}"
-        echo -e "ERROR: Stopping $(basename "$0")."
-        echo -e "Goodbye..."
-    fi
-    # shellcheck disable=2046
-    [ -n "$(jobs -pr)" ] && kill $(jobs -pr) && sleep 5 && kill -9 $(jobs -pr)
-    exit 1
+error_msg() {
+    msg "Something went wrong!\nPlease copy the last output and head over to\n"
+    msg "\thttps://discord.gg/mainsail\n"
+    msg "open a ticket in #supportforum ..."
 }
 
-### Init ERR Trap
-trap 'err_exit $? $LINENO' ERR
-
-
-### Uninstall crowsnest
+## Interactive
 ask_uninstall() {
     local remove
-    if  [ -x "/usr/local/bin/crowsnest" ] && [ -d "${HOME}/crowsnest" ]; then
         while true; do
         read -erp "Do you REALLY want to remove existing 'crowsnest'? (y/N) " -i "N" remove
             case "${remove}" in
-                y|Y|yes|Yes|YES)
-                    source_env_file
-                    uninstall_crowsnest
-                    remove_raspicam_fix
-                    remove_logrotate
-                    ask_remove_config
-                    goodbye_msg
+                [yY]*)
                     break
                 ;;
-                n|N|no|No|NO)
-                    echo -e "\nYou answered '${remove}'! Uninstall will be aborted..."
-                    echo -e "GoodBye...\n"
+                [nN]*)
+                    msg "\nYou answered '${remove}'! Uninstall will be aborted..."
+                    msg "GoodBye...\n"
                     exit 1
                 ;;
                 *)
-                    echo -e "\nInvalid input, please try again."
+                    msg "\nInvalid input, please try again."
                 ;;
             esac
         done
-    else
-        echo -e "\n'crowsnest' seems not installed."
-        echo -e "Exiting. GoodBye ..."
-    fi
-}
-
-source_env_file() {
-    # shellcheck disable=SC1090
-    . "${CN_CONFIG_ENVPATH}"
-}
-
-uninstall_crowsnest() {
-    local servicefile bin_path
-    servicefile="/etc/systemd/system/crowsnest.service"
-    bin_path="/usr/local/bin/crowsnest"
-    # Dirty hack to grant sudo priviledges
-    # and not overwriting next \r line
-    sudo sh -c 'echo "" > /dev/null'
-    echo -en "\nStopping crowsnest.service ...\r"
-    sudo systemctl stop crowsnest.service &> /dev/null
-    echo -e "Stopping crowsnest.service ... \t[${CN_OK}]\r"
-    echo -en "\nDisable crowsnest.service ...\r"
-    sudo systemctl disable crowsnest.service &> /dev/null
-    echo -e "Disable crowsnest.service ... \t[${CN_OK}]\r"
-    echo -en "Uninstalling crowsnest.service...\r"
-    if [[ -f "${servicefile}" ]]; then
-        sudo rm -f "${servicefile}"
-    fi
-    if [[ -x "${bin_path}" ]]; then
-        sudo rm -f "${bin_path}"
-    fi
-    echo -e "Uninstalling crowsnest.service...[${CN_OK}]\r"
-    if [[ -n "${CN_CONFIG_ENVPATH}" ]]; then
-        echo -en "Removing crowsnest.env ...\r"
-        sudo rm -f "${CN_CONFIG_ENVPATH}"
-        echo -e "Removing crowsnest.env ... [${CN_OK}]\r"
-    fi
 }
 
 ask_remove_config() {
-    local config reply
-    config="${CROWSNEST_ARGS/-c /}"
+    local reply
     while true; do
         read -erp "Do you want to remove crowsnest.conf? [y/N]: " -i "N" reply
         case "${reply}" in
             [yY]* )
-                sudo rm -f "${config}"
-                echo -e "Removing 'crowsnest.conf' ... [${CN_OK}]\r"
+                remove_conf_file
                 break
             ;;
             [nN]* )
-                echo -e "Removing 'crowsnest.conf' ... [${CN_SK}]\r"
+                status_msg "Removing 'crowsnest.conf' ..." "2"
                 break
             ;;
             * )
-                echo -e "\e[31mERROR: Not a valid choice, try again ...\e[0m"
+                msg "\e[31mERROR: Not a valid choice, try again ...\e[0m"
             ;;
         esac
     done
     return 0
 }
 
-remove_raspicam_fix() {
-    if [[ -f /etc/modprobe.d/bcm2835-v4l2.conf ]] &&
-    [[ -f /proc/device-tree/model ]] &&
-    grep -q "Raspberry" /proc/device-tree/model ; then
-        echo -en "Removing Raspicam Fix ...\r"
-        sudo sed -i '/bcm2835/d' /etc/modules
-        sudo rm -f /etc/modprobe.d/bcm2835-v4l2.conf
-        echo -e "Removing Raspicam Fix ... [${CN_OK}]"
-    else
-        echo -e "Removing Raspicam Fix ... [${CN_SK}]"
-        echo -e "\tThis is not a Raspberry Pi"
-        echo -e "\tor Raspicamfix not installed ... \n"
+## remove funcs
+remove_service_file() {
+    if [[ ! -f "${SERVICE_FILE}" ]]; then
+        status_msg "Removing service file ..." "2"
+        msg "\t==> File does not exist!"
+        return 0
+    fi
+    if [[ -f "${SERVICE_FILE}" ]]; then
+        if sudo rm -f "${SERVICE_FILE}"; then
+            status_msg "Removing service file ..." "0"
+        else
+            status_msg "Removing service file ..." "1"
+        fi
+    fi
+}
+
+remove_env_file() {
+    local env_file
+    env_file="${CROWSNEST_ENV_PATH}/crowsnest.env"
+    if [[ ! -f "${env_file}" ]]; then
+        status_msg "Removing environment file ..." "2"
+        msg "\t==> File does not exist!"
+        return 0
+    fi
+    if [[ -f "${env_file}" ]]; then
+        if sudo rm -f "${env_file}"; then
+            status_msg "Removing environment file ..." "0"
+        else
+            status_msg "Removing environment file ..." "1"
+        fi
+    fi
+}
+
+remove_conf_file() {
+    local conf_file
+    conf_file="${CROWSNEST_CONFIG_PATH}/crowsnest.conf"
+    if [[ ! -f "${conf_file}" ]]; then
+        status_msg "Removing 'crowsnest.conf' ..." "2"
+        msg "\t==> File does not exist!"
+        return 0
+    fi
+    if [[ -f "${conf_file}" ]]; then
+        if sudo rm -f "${conf_file}"; then
+            status_msg "Removing 'crowsnest.conf' ..." "0"
+        else
+            status_msg "Removing 'crowsnest.conf' ..." "1"
+        fi
     fi
 }
 
-function remove_logrotate {
-    echo -en "Removing Logrotate Rule ...\r"
-    sudo rm -f /etc/logrotate.d/crowsnest
-    echo -e "Removing Logrotate Rule ... [${CN_OK}]"
+remove_log_files() {
+    local log_file
+    log_file="${CROWSNEST_LOG_PATH}/crowsnest.log"
+    if [[ ! -f "${log_file}" ]]; then
+        status_msg "Removing 'crowsnest.log' ..." "2"
+        msg "\t==> File does not exist!"
+        return 0
+    fi
+    if [[ -f "${log_file}" ]]; then
+        if sudo rm -f "${log_file}"; then
+            status_msg "Removing 'crowsnest.log' ..." "0"
+        else
+            status_msg "Removing 'crowsnest.log' ..." "1"
+        fi
+    fi
 }
 
-#### MAIN
-install_cleanup_trap
-welcome_msg
-ask_uninstall
+remove_logrotate() {
+    local logrotate_conf
+    logrotate_conf="/etc/logrotate.d/crowsnest"
+    if [[ ! -f "${logrotate_conf}" ]]; then
+        status_msg "Removing Logrotate Rule ..." "2"
+        msg "\t==> File does not exist!"
+        return 0
+    fi
+    if [[ -f "${logrotate_conf}" ]]; then
+        sudo rm -f /etc/logrotate.d/crowsnest || return 1
+    fi
+}
+
+get_path() {
+    local cn_base_path
+    cn_base_path="$(
+            dirname "$(grep "EnvironmentFile" < "${SERVICE_FILE}" | cut -f2 -d= )"
+        )"
+        cn_base_path="${cn_base_path%/*}"
+        echo "${cn_base_path}"
+}
+
+main() {
+    if [[ "${UID}" = '0' ]]; then
+    msg "\n\tYOU DONT NEED TO RUN UNINSTALLER AS ROOT!"
+    msg "\tYou will be prompted for 'sudo' password"
+    exit 1
+    fi
+
+    welcome_msg
+
+    [[ -f "${SERVICE_FILE}" ]] || (
+        msg "\nERROR: File ${SERVICE_FILE} not found!"
+        msg "\t ==> Crowsnest seems not to be installed ... [EXITING]"
+        exit 1
+    )
+
+    ask_uninstall
+
+    ## fake sudo
+    sudo echo "fakesudo" >> /dev/null
+
+    #shellcheck disable=SC1091
+    [[ -f "${SRC_DIR}/.config" ]] && . "${SRC_DIR}/.config"
+    DATA_DIR="$(get_path)"
+    [[ -n "${CROWSNEST_CONFIG_PATH}" ]] || CROWSNEST_CONFIG_PATH="${DATA_DIR}/config"
+    [[ -n "${CROWSNEST_LOG_PATH}" ]] || CROWSNEST_LOG_PATH="${DATA_DIR}/logs"
+    [[ -n "${CROWSNEST_ENV_PATH}" ]] || CROWSNEST_ENV_PATH="${DATA_DIR}/systemd"
+
+    if systemctl is-active crowsnest.service &> /dev/null; then
+        if sudo systemctl stop crowsnest.service &> /dev/null; then
+            status_msg "Stopping crowsnest service ..." "0"
+        else
+            status_msg "Stopping crowsnest service ..." "1"
+        fi
+    else
+        status_msg "Stopping crowsnest service ..." "2"
+        msg "\t==> crowsnest service is not running"
+    fi
+
+    if systemctl is-enabled crowsnest.service &> /dev/null; then
+        if sudo systemctl disable crowsnest.service &> /dev/null; then
+            status_msg "Disable crowsnest service ..." "0"
+        else
+            status_msg "Disable crowsnest service ..." "1"
+        fi
+    else
+        status_msg "Disable crowsnest service ..." "2"
+        msg "\t==> crowsnest service is enabled"
+    fi
+
+
+    remove_service_file
+
+    remove_env_file
+
+    if remove_logrotate; then
+        status_msg "Removing Logrotate Rule ..." "0"
+    else
+        status_msg "Removing Logrotate Rule ..." "1"
+    fi
+
+    remove_log_files
+
+    ask_remove_config
+
+    goodbye_msg
+}
 
+main "${@}"
 exit 0
