Differences in klippy/extras/smart_effector.py:

- Lines with differences: 24 lines in 4 blocks

Detailed Differences:

--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/home/mks/klipper/klippy/extras/smart_effector.py	2023-10-20 03:52:16.796163936 -0400
+++ /home/mks/firmware_comparison/downloads/klipper/klippy/extras/smart_effector.py	2024-10-08 17:45:26.569216296 -0400
@@ -48,7 +48,7 @@
             bit_time += bit_step
         return bit_time
 
-class SmartEffectorEndstopWrapper:
+class SmartEffectorProbe:
     def __init__(self, config):
         self.printer = config.get_printer()
         self.gcode = self.printer.lookup_object('gcode')
@@ -64,6 +64,12 @@
         self.query_endstop = self.probe_wrapper.query_endstop
         self.multi_probe_begin = self.probe_wrapper.multi_probe_begin
         self.multi_probe_end = self.probe_wrapper.multi_probe_end
+        self.get_position_endstop = self.probe_wrapper.get_position_endstop
+        # Common probe implementation helpers
+        self.cmd_helper = probe.ProbeCommandHelper(
+            config, self, self.probe_wrapper.query_endstop)
+        self.probe_offsets = probe.ProbeOffsetsHelper(config)
+        self.probe_session = probe.ProbeSessionHelper(config, self)
         # SmartEffector control
         control_pin = config.get('control_pin', None)
         if control_pin:
@@ -78,6 +84,17 @@
         self.gcode.register_command("SET_SMART_EFFECTOR",
                                     self.cmd_SET_SMART_EFFECTOR,
                                     desc=self.cmd_SET_SMART_EFFECTOR_help)
+    def get_probe_params(self, gcmd=None):
+        return self.probe_session.get_probe_params(gcmd)
+    def get_offsets(self):
+        return self.probe_offsets.get_offsets()
+    def get_status(self, eventtime):
+        return self.cmd_helper.get_status(eventtime)
+    def start_probe_session(self, gcmd):
+        return self.probe_session.start_probe_session(gcmd)
+    def probing_move(self, pos, speed):
+        phoming = self.printer.lookup_object('homing')
+        return phoming.probing_move(self, pos, speed)
     def probe_prepare(self, hmove):
         toolhead = self.printer.lookup_object('toolhead')
         self.probe_wrapper.probe_prepare(hmove)
@@ -148,7 +165,6 @@
         gcmd.respond_info('SmartEffector sensitivity was reset')
 
 def load_config(config):
-    smart_effector = SmartEffectorEndstopWrapper(config)
-    config.get_printer().add_object('probe',
-                                    probe.PrinterProbe(config, smart_effector))
+    smart_effector = SmartEffectorProbe(config)
+    config.get_printer().add_object('probe', smart_effector)
     return smart_effector
