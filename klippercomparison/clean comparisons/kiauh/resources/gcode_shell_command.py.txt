Differences in resources/gcode_shell_command.py:

- Lines with differences: 33 lines in 4 blocks

Detailed Differences:

--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/home/mks/kiauh/resources/gcode_shell_command.py	2022-07-25 05:41:36.758250528 -0400
+++ /home/mks/firmware_comparison/downloads/kiauh/resources/gcode_shell_command.py	2024-10-08 17:45:33.575241837 -0400
@@ -8,22 +8,26 @@
 import subprocess
 import logging
 
+
 class ShellCommand:
     def __init__(self, config):
         self.name = config.get_name().split()[-1]
         self.printer = config.get_printer()
-        self.gcode = self.printer.lookup_object('gcode')
-        cmd = config.get('command')
+        self.gcode = self.printer.lookup_object("gcode")
+        cmd = config.get("command")
         cmd = os.path.expanduser(cmd)
         self.command = shlex.split(cmd)
-        self.timeout = config.getfloat('timeout', 2., above=0.)
-        self.verbose = config.getboolean('verbose', True)
+        self.timeout = config.getfloat("timeout", 2.0, above=0.0)
+        self.verbose = config.getboolean("verbose", True)
         self.proc_fd = None
         self.partial_output = ""
         self.gcode.register_mux_command(
-            "RUN_SHELL_COMMAND", "CMD", self.name,
+            "RUN_SHELL_COMMAND",
+            "CMD",
+            self.name,
             self.cmd_RUN_SHELL_COMMAND,
-            desc=self.cmd_RUN_SHELL_COMMAND_help)
+            desc=self.cmd_RUN_SHELL_COMMAND_help,
+        )
 
     def _process_output(self, eventime):
         if self.proc_fd is None:
@@ -33,11 +37,11 @@
         except Exception:
             pass
         data = self.partial_output + data.decode()
-        if '\n' not in data:
+        if "\n" not in data:
             self.partial_output = data
             return
-        elif data[-1] != '\n':
-            split = data.rfind('\n') + 1
+        elif data[-1] != "\n":
+            split = data.rfind("\n") + 1
             self.partial_output = data[split:]
             data = data[:split]
         else:
@@ -45,16 +49,19 @@
         self.gcode.respond_info(data)
 
     cmd_RUN_SHELL_COMMAND_help = "Run a linux shell command"
+
     def cmd_RUN_SHELL_COMMAND(self, params):
-        gcode_params = params.get('PARAMS','')
+        gcode_params = params.get("PARAMS", "")
         gcode_params = shlex.split(gcode_params)
         reactor = self.printer.get_reactor()
         try:
             proc = subprocess.Popen(
-                self.command + gcode_params, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
+                self.command + gcode_params,
+                stdout=subprocess.PIPE,
+                stderr=subprocess.STDOUT,
+            )
         except Exception:
-            logging.exception(
-                "shell_command: Command {%s} failed" % (self.name))
+            logging.exception("shell_command: Command {%s} failed" % (self.name))
             raise self.gcode.error("Error running command {%s}" % (self.name))
         if self.verbose:
             self.proc_fd = proc.stdout.fileno()
@@ -64,7 +71,7 @@
         endtime = eventtime + self.timeout
         complete = False
         while eventtime < endtime:
-            eventtime = reactor.pause(eventtime + .05)
+            eventtime = reactor.pause(eventtime + 0.05)
             if proc.poll() is not None:
                 complete = True
                 break
