--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/sbin/softy	2022-06-23 02:36:27.000000000 -0400
+++ /media/mks/armbi_root/usr/sbin/softy	2023-10-13 15:20:07.000000000 -0400
@@ -25,7 +25,6 @@
 # install_urbackup
 # install_transmission
 # install_transmission_seed_armbian_torrents
-# install_hassio
 # install_openhab
 # install_syncthing
 # install_plex_media_server
@@ -113,11 +112,6 @@
 	alive_port "Personal cloud @syncthing.net" "8384"
 	LIST+=( "Syncthing" "$DESCRIPTION" "$SYNCTHING_STATUS" )
 
-	# Hass.io
-	HASS_STATUS="$([[ -f /etc/hassio.json ]] && echo "on" || echo "off" )"
-	alive_port "Home assistant smarthome suite" "8123"
-	LIST+=( "Hassio" "$DESCRIPTION" "$HASS_STATUS" )
-
 	# OpenHab
 	OPENHAB_STATUS="$([[ -f /etc/default/openhab ]] && echo "on" || echo "off" )"
 	DESCRIPTION="Openhab smarthome suite"
@@ -337,7 +331,7 @@
 #
 # Displays URL to the service $1 on port $2 or just that is active if $3 = boolean $4 = path
 #
-if [[ -n $(netstat -lnt | awk '$6 == "LISTEN" && $4 ~ ".'$2'"') ]]; then
+if [[ -n $(ss -lntH src :$2) ]]; then
 	if [[ $3 == boolean ]]; then
 		DESCRIPTION="$1 is \Z1active\Z0";
 	elif [[ $3 == ssl ]]; then
@@ -445,9 +439,9 @@
 debconf-apt-progress -- apt-get -y install cups lpr cups-filters
 # cups-filters if jessie
 sed -e 's/Listen localhost:631/Listen 631/g' -i /etc/cups/cupsd.conf
-sed -e 's/<Location \/>/<Location \/>\nallow $SUBNET/g' -i /etc/cups/cupsd.conf
-sed -e 's/<Location \/admin>/<Location \/admin>\nallow $SUBNET/g' -i /etc/cups/cupsd.conf
-sed -e 's/<Location \/admin\/conf>/<Location \/admin\/conf>\nallow $SUBNET/g' -i /etc/cups/cupsd.conf
+sed -e "s/<Location \/>/<Location \/>\nallow $SUBNET/g" -i /etc/cups/cupsd.conf
+sed -e "s/<Location \/admin>/<Location \/admin>\nallow $SUBNET/g" -i /etc/cups/cupsd.conf
+sed -e "s/<Location \/admin\/conf>/<Location \/admin\/conf>\nallow $SUBNET/g" -i /etc/cups/cupsd.conf
 service cups restart
 service samba restart | service smbd restart >/dev/null 2>&1
 }
@@ -639,17 +633,30 @@
 
 install_docker ()
 {
-curl -fsSL "https://download.docker.com/linux/debian/gpg" | apt-key add -qq - > /dev/null 2>&1
-debconf-apt-progress -- apt-get update
-if [[ $distribution == hirsute || $distribution == focal || $distribution == bionic ]]; then
-echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu focal stable" > \
-/etc/apt/sources.list.d/docker.list
-debconf-apt-progress -- apt-get install -y -qq --no-install-recommends docker.io
-else
-echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/debian buster stable" >\
-/etc/apt/sources.list.d/docker.list
-debconf-apt-progress -- apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io
-fi
+case $distribution in
+	jammy)
+		mkdir -p /etc/apt/keyrings
+		curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
+			| gpg --dearmor -o /etc/apt/keyrings/docker.gpg
+		echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
+			> /etc/apt/sources.list.d/docker.list
+		debconf-apt-progress -- apt-get update
+		debconf-apt-progress -- apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io
+	;;
+	bullseye|buster)
+		mkdir -p /etc/apt/keyrings
+		curl -fsSL https://download.docker.com/linux/debian/gpg \
+			| gpg --dearmor -o /etc/apt/keyrings/docker.gpg
+		echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > \
+			/etc/apt/sources.list.d/docker.list
+		debconf-apt-progress -- apt-get update
+		debconf-apt-progress -- apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io
+	;;
+	*)
+		debconf-apt-progress -- apt-get update
+		debconf-apt-progress -- apt-get install -y -qq --no-install-recommends docker.io
+	;;
+esac
 }
 
 
@@ -763,41 +770,6 @@
 
 
 
-install_hassio ()
-{
-#
-# Install Home assistant smart home suite hass.io / Docker instance by using official installer
-#
-
-local arch=$(dpkg --print-architecture)
-
-case $arch in
-	armhf)
-		local machine=raspberrypi2
-	;;
-	arm64)
-		local machine=raspberrypi4-64
-	;;
-	amd64)
-		local machine=intel-nuc
-	;;
-	*)
-		exit 1
-	;;
-esac
-
-if [ $? == 0 ]; then
-
-	install_docker
-	debconf-apt-progress -- apt-get install -y apparmor-utils apt-transport-https avahi-daemon ca-certificates \
-	dbus jq network-manager socat software-properties-common
-	curl -sL "https://raw.githubusercontent.com/home-assistant/supervised-installer/master/installer.sh" | \
-	bash -s -- -m  ${machine}
-	dialog --backtitle "$BACKTITLE" --title "Please wait" \
-	--msgbox "\nIt can take several minutes before Home Assistant UI becomes available! " 7 75
-
-fi
-}
 
 
 
@@ -1569,9 +1541,10 @@
 
 install_yggdrasil ()
 {
-curl -fsSL "https://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/key.txt" | apt-key add -qq - > /dev/null 2>&1
-echo 'deb http://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/ debian yggdrasil' > \
-	/etc/apt/sources.list.d/yggdrasil.list
+curl -fsSL "https://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/key.txt" \
+	| gpg --dearmor -o /usr/share/keyrings/yggdrasil.gpg
+echo 'deb [signed-by=/usr/share/keyrings/yggdrasil.gpg] http://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/ debian yggdrasil' \
+	> /etc/apt/sources.list.d/yggdrasil.list
 debconf-apt-progress -- apt-get update
 debconf-apt-progress -- apt-get install -y -qq yggdrasil
 systemctl enable --now yggdrasil
@@ -1708,11 +1681,6 @@
 			selection=${selection//Syncthing/}
 		fi
 
-		if [[ "$selection" == *Hassio* && "$HASS_STATUS" != "on" ]]; then
-			install_hassio
-			selection=${selection//Hassio/}
-		fi
-
 		if [[ "$selection" == *OpenHAB && "$OPENHAB_STATUS" != "on" ]]; then
 			install_openhab
 			selection=${selection//OpenHAB/}
