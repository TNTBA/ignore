--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/var/lib/dpkg/info/libpam0g:arm64.postinst	2019-02-14 02:08:47.000000000 -0500
+++ /media/mks/armbi_root/var/lib/dpkg/info/libpam0g:arm64.postinst	2023-09-21 16:55:12.000000000 -0400
@@ -52,7 +52,45 @@
     echo ""
 }
 
-installed_services() {
+if test -d /run/systemd/system; then
+    is_service_configured() {
+        systemctl is-enabled --quiet $1 || return 1
+    }
+    restart_service() {
+        if systemctl try-restart $1; then
+            :
+        else
+            failed="$failed $1"
+        fi
+    }
+else # not systemd
+    is_service_configured() {
+        service="$1"
+	idl="/etc/init.d/${service}"
+	if [ -n "$idl" ] && [ -x $idl ]; then
+	    return 0
+	else
+            return 1
+        fi
+    }
+
+    restart_service() {
+        service="$1"
+	idl="invoke-rc.d ${service}"
+	echo -n "  $service: stopping..." 2>&1
+	$idl stop > /dev/null 2>&1 || true
+	sleep 1
+	echo -n "starting..." 2>&1
+	if $idl start > /dev/null 2>&1; then
+	    echo "done." 2>&1
+	else
+	    echo "FAILED! ($?)" 2>&1
+	    failed="$service $failed"
+	fi
+    }
+fi
+    
+                 installed_services() {
     check="$@"
 
     # Only get the ones that are installed, and configured
@@ -74,11 +112,10 @@
     )
 
     for service in $check; do
-	idl="/etc/init.d/${service}"
-	if [ -n "$idl" ] && [ -x $idl ]; then
+	if is_service_configured $service; then
 		services="$service $services"
 	else
-		echo "WARNING: init script for $service not found." >&2
+		echo "WARNING:  $service not configured." >&2
 	fi
     done
     echo "$services"
@@ -87,7 +124,7 @@
 if [ "$1" = "configure" ]
 then
     if [ ! -z "$2" ]; then
-	if dpkg --compare-versions "$2" lt 1.3.1-2; then
+	if dpkg --compare-versions "$2" lt 1.4.0-2; then
 	    db_version 2.0
 
 	    echo -n "Checking for services that may need to be restarted..."
@@ -152,16 +189,7 @@
 				continue
 			    ;;
 			esac
-			echo -n "  $service: stopping..."
-			$idl stop > /dev/null 2>&1 || true
-			sleep 1
-			echo -n "starting..."
-			if $idl start > /dev/null 2>&1; then
-			    echo "done."
-			else
-			    echo "FAILED! ($?)"
-			    failed="$service $failed"
-			fi
+                        restart_service "$service"
 		    done
 		    echo
 		    if [ -n "$failed" ]; then
@@ -197,7 +225,7 @@
 	    # Shut down the frontend, to make sure none of the
 	    # restarted services keep a connection open to it
 	    db_stop
-	fi # end upgrading and $2 lt 1.3.1-2
+	fi # end upgrading and $2 lt 1.4.0-2
     fi # Upgrading
 fi
 
