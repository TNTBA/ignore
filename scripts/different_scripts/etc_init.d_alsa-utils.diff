--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/etc/init.d/alsa-utils	2019-03-30 05:18:40.000000000 -0400
+++ /media/mks/armbi_root/etc/init.d/alsa-utils	2022-11-30 12:31:23.000000000 -0500
@@ -26,8 +26,9 @@
 PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 MYNAME=/etc/init.d/alsa-utils
 ALSACTLHOME=/run/alsa
+ALSACTLRUNTIME="${ALSACTLHOME}/runtime"
 
-[ -d "$ALSACTLHOME" ] || mkdir -p "$ALSACTLHOME"
+[ -d "$ALSACTLRUNTIME" ] || mkdir -p "$ALSACTLRUNTIME"
 
 . /lib/lsb/init-functions
 . /usr/share/alsa/utils.sh
@@ -62,13 +63,13 @@
 	# then it failed somehow.  This works around the fact
 	# that alsactl doesn't return nonzero status when it
 	# can't restore settings for the card
-	if MSG="$(alsactl -E HOME="$ALSACTLHOME" restore $CARD 2>&1 >/dev/null)" && [ ! "$MSG" ] ; then
+	if MSG="$(alsactl -E HOME="$ALSACTLHOME" -E XDG_RUNTIME_DIR="${ALSACTLRUNTIME}" restore $CARD 2>&1 >/dev/null)" && [ ! "$MSG" ] ; then
 		return 0
 	else
 		# Retry with the "force" option.  This restores more levels
 		# but it results in much longer error messages.
-		alsactl -F restore $CARD >/dev/null 2>&1
-		log_action_cont_msg "warning: 'alsactl -E HOME="$ALSACTLHOME" restore${CARD:+ $CARD}' failed with error message '$MSG'"
+		alsactl -E HOME="$ALSACTLHOME" -E XDG_RUNTIME_DIR="${ALSACTLRUNTIME}" -F restore $CARD >/dev/null 2>&1
+		log_action_cont_msg "warning: 'alsactl -E HOME="$ALSACTLHOME" -E XDG_RUNTIME_DIR="${ALSACTLRUNTIME}" restore${CARD:+ $CARD}' failed with error message '$MSG'"
 		return 1
 	fi
 }
@@ -78,11 +79,11 @@
 {
 	CARD="$1"
 	[ "$1" = all ] && CARD=""
-	if MSG="$(alsactl -E HOME="$ALSACTLHOME" store $CARD 2>&1)" ; then
+	if MSG="$(alsactl -E HOME="$ALSACTLHOME" -E XDG_RUNTIME_DIR="${ALSACTLRUNTIME}" store $CARD 2>&1)" ; then
 		sleep 1
 		return 0
 	else
-		log_action_cont_msg "warning: 'alsactl store${CARD:+ $CARD}' failed with error message '$MSG'"
+		log_action_cont_msg "warning: 'alsactl store${CARD:+ $CARD}' -E HOME="$ALSACTLHOME" -E XDG_RUNTIME_DIR="${ALSACTLRUNTIME}" failed with error message '$MSG'"
 		return 1
 	fi
 }
