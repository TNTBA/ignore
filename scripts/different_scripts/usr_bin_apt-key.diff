--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/bin/apt-key	2021-04-19 12:41:13.000000000 -0400
+++ /media/mks/armbi_root/usr/bin/apt-key	2023-05-25 10:11:37.000000000 -0400
@@ -92,18 +92,7 @@
 
 command_available() {
     if [ -x "$1" ]; then return 0; fi
-    # command -v "$1" >/dev/null 2>&1 # not required by policy, see #747320
-    # which "$1" >/dev/null 2>&1 # is in debianutils (essential) but not on non-debian systems
-    local OLDIFS="$IFS"
-    IFS=:
-    for p in $PATH; do
-	if [ -x "${p}/${1}" ]; then
-	    IFS="$OLDIFS"
-	    return 0
-	fi
-    done
-    IFS="$OLDIFS"
-    return 1
+    command -v "$1" >/dev/null # required by policy, see #747320
 }
 
 escape_shell() {
@@ -325,11 +314,11 @@
     local FILEEXT="${1##*.}"
     if [ "$FILEEXT" = 'gpg' ]; then
 	# 0x98, 0x99 and 0xC6 via octal as hex isn't supported by dashs printf
-	if printf '\231' | cmp --silent --bytes=1 - "$1"; then
+	if printf '\231' | cmp -s -n 1 - "$1"; then
 	    true
-	elif printf '\230' | cmp --silent --bytes=1 - "$1"; then
+	elif printf '\230' | cmp -s -n 1 - "$1"; then
 	    true
-	elif printf '\306' | cmp --silent --bytes=1 - "$1"; then
+	elif printf '\306' | cmp -s -n 1 - "$1"; then
 	    true
 	else
 	    apt_warn "The key(s) in the keyring $1 are ignored as the file has an unsupported filetype."
@@ -656,6 +645,9 @@
    TRUSTEDFILE="/etc/apt/trusted.gpg"
    eval $(apt-config shell TRUSTEDFILE Apt::GPGV::TrustedKeyring)
    eval $(apt-config shell TRUSTEDFILE Dir::Etc::Trusted/f)
+   if [ "$APT_KEY_NO_LEGACY_KEYRING" ]; then
+        TRUSTEDFILE="/dev/null"
+   fi
 fi
 
 command="$1"
@@ -671,10 +663,10 @@
     # well as the script hopefully uses apt-key optionally then like e.g.
     # debian-archive-keyring for (upgrade) cleanup did
     if [ -n "$DPKG_MAINTSCRIPT_PACKAGE" ] && [ -z "$APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE" ]; then
-	if ! dpkg-query --show --showformat '${Pre-Depends}${Depends}${Recommends}\n' "$DPKG_MAINTSCRIPT_PACKAGE" 2>/dev/null | grep -q gnupg; then
+	if ! dpkg-query --show --showformat '${Pre-Depends}${Depends}${Recommends}\n' "$DPKG_MAINTSCRIPT_PACKAGE" 2>/dev/null | grep -E -q 'gpg|gnupg'; then
 	    cat >&2 <<EOF
 Warning: The $DPKG_MAINTSCRIPT_NAME maintainerscript of the package $DPKG_MAINTSCRIPT_PACKAGE
-Warning: seems to use apt-key (provided by apt) without depending on gnupg or gnupg2.
+Warning: seems to use apt-key (provided by apt) without depending on gpg, gnupg, or gnupg2.
 Warning: This will BREAK in the future and should be fixed by the package maintainer(s).
 Note: Check first if apt-key functionality is needed at all - it probably isn't!
 EOF
@@ -740,8 +732,18 @@
     # (Maintainer) scripts should not be using apt-key
     if [ -n "$DPKG_MAINTSCRIPT_PACKAGE" ]; then
 	echo >&2 "Warning: apt-key should not be used in scripts (called from $DPKG_MAINTSCRIPT_NAME maintainerscript of the package ${DPKG_MAINTSCRIPT_PACKAGE})"
-    elif [ ! -t 1 ]; then
-	echo >&2 "Warning: apt-key output should not be parsed (stdout is not a terminal)"
+    fi
+
+    echo >&2 "Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8))."
+}
+
+warn_outside_maintscript() {
+    # In del, we want to warn in interactive use, but not inside maintainer
+    # scripts, so as to give people a chance to migrate keyrings.
+    #
+    # FIXME: We should always warn starting in 2022.
+    if [ -z "$DPKG_MAINTSCRIPT_PACKAGE" ]; then
+	echo >&2 "Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8))."
     fi
 }
 
@@ -760,6 +762,7 @@
         ;;
     del|rm|remove)
 	# no script warning here as removing 'add' usage needs 'del' for cleanup
+	warn_outside_maintscript
 	requires_root
 	foreach_keyring_do 'remove_key_from_keyring' "$@"
 	aptkey_echo "OK"
@@ -772,6 +775,7 @@
 	merge_back_changes
 	;;
     net-update)
+	warn_on_script_usage
 	requires_root
 	setup_merged_keyring
 	net_update
