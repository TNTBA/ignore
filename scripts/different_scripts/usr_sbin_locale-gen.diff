--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/sbin/locale-gen	2019-07-29 05:56:57.000000000 -0400
+++ /media/mks/armbi_root/usr/sbin/locale-gen	2024-04-27 15:53:15.000000000 -0400
@@ -5,59 +5,48 @@
 LOCALEGEN=/etc/locale.gen
 LOCALES=/usr/share/i18n/locales
 USER_LOCALES=/usr/local/share/i18n/locales
-if [ -n "$POSIXLY_CORRECT" ]; then
-  unset POSIXLY_CORRECT
-fi
-
-
-[ -f $LOCALEGEN ] || exit 0;
-[ -s $LOCALEGEN ] || exit 0;
-
-KEEP=
-if [ "$1" = '--keep-existing' ]; then
-	KEEP=1
-fi
-
-if [ -z "$KEEP" ]; then
-	# Remove all old locale dir and locale-archive before generating new
-	# locale data.
-	rm -rf /usr/lib/locale/locale-archive || true
-fi
+
+
+[ -s "$LOCALEGEN" ] || exit 0
+
+[ "$1" = '--keep-existing' ] && KEEP=1 || KEEP=0
+
+# Remove old locale-archive before generating new locale data
+[ "$KEEP" -eq 0 ] && rm -rf /usr/lib/locale/locale-archive || :
 
 umask 022
 
 is_entry_ok() {
-  if [ -n "$locale" -a -n "$charset" ] ; then
-    true
-  else
-    echo "error: Bad entry '$locale $charset'"
-    false
-  fi
+	if [ -z "$locale" ] || [ -z "$charset" ]; then
+		echo "error: Bad entry '$locale $charset'"
+		return 1
+	fi
 }
 
 echo "Generating locales (this might take a while)..."
-while read locale charset; do \
-	case $locale in \#*) continue;; "") continue;; esac; \
+while read -r locale charset; do
+	if [ -z "$locale" ] || [ "${locale#\#}" != "$locale" ]; then continue; fi
 	is_entry_ok || continue
-	if [ "$KEEP" ] && PERL_BADLANG=0 perl -MPOSIX -e \
-	    'exit 1 unless setlocale(LC_ALL, $ARGV[0])' "$locale"; then
-		continue
-	fi
-	echo -n "  `echo $locale | sed 's/\([^.\@]*\).*/\1/'`"; \
-	echo -n ".$charset"; \
-	echo -n `echo $locale | sed 's/\([^\@]*\)\(\@.*\)*/\2/'`; \
-	echo -n '...'; \
-	if [ -f $USER_LOCALES/$locale ] ; then
-	    input=$USER_LOCALES/$locale
-        elif [ -f $LOCALES/$locale ]; then 
-	    input=$locale
-        else
-	    input=`echo $locale | sed 's/\([^.]*\)[^@]*\(.*\)/\1\2/'`
-	    if [ -f $USER_LOCALES/$input ]; then
-	        input=$USER_LOCALES/$input
-            fi
+
+	if [ "$KEEP" -eq 1 ] && PERL_BADLANG=0 perl -MPOSIX -e 'exit 1 unless setlocale(LC_ALL, $ARGV[0])' "$locale"; then continue; fi
+
+	locale_base="${locale%%.*}"
+	locale_base="${locale_base%%@*}"
+	locale_at="${locale#*@}"
+	[ "$locale_at" = "$locale" ] && locale_at= || locale_at="@$locale_at"
+	printf "  %s.%s%s..." "$locale_base" "$charset" "$locale_at"
+
+	if [ -e "$USER_LOCALES/$locale" ]; then
+		input="$USER_LOCALES/$locale"
+	elif [ -e "$LOCALES/$locale" ]; then
+		input="$locale"
+	else
+		input="$locale_base$locale_at"
+		if [ -e "$USER_LOCALES/$input" ]; then
+			input="$USER_LOCALES/$input"
+		fi
 	fi
-	localedef -i $input -c -f $charset -A /usr/share/locale/locale.alias $locale || :; \
-	echo ' done'; \
-done < $LOCALEGEN
+	localedef -i "$input" -c -f "$charset" -A /usr/share/locale/locale.alias "$locale" || :
+	echo " done"
+done < "$LOCALEGEN"
 echo "Generation complete."
