--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/bin/unicode_start	2018-07-28 11:58:59.000000000 -0400
+++ /media/mks/armbi_root/usr/bin/unicode_start	2023-03-23 04:54:17.000000000 -0400
@@ -1,7 +1,7 @@
 #!/bin/sh
 
 # 0. Check whether we're on a console
-TTY="`/usr/bin/tty`"
+TTY=$(/usr/bin/tty)
 case "$TTY" in
 	/dev/console|/dev/vc*|/dev/tty[0-9]*)
 		;;
@@ -47,17 +47,17 @@
 # not the global keymap. root will have to load the keymap in unicode mode
 # explicitly.
 
-uid="`id -u 2>/dev/null`" ||:
-if [ "$uid" = '0' ]; then
+uid="$(id -u 2>/dev/null)" ||:
+if [ "$uid" = 0 ]; then
 	# There is no way of reverting the effect of "dumpkeys | loadkeys --unicode",
 	# the memory of the earlier keymap is lost. Therefore, try
 	# to save a copy of the original keymap to be able to reload it in unicode_stop.
 	# (see also http://mail.nl.linux.org/linux-utf8/2003-08/msg00053.html):
 
-	[ -n "$HOME" -a "$HOME" != '/' ] ||
+	[ -n "$HOME" ] && [ "$HOME" != '/' ] ||
 		HOME='/root'
 
-	if [ -d "$HOME" -a -w "$HOME" ]; then
+	if [ -d "$HOME" ] && [ -w "$HOME" ]; then
 		[ -d "$HOME/.kbd" ] ||
 			mkdir -- "$HOME/.kbd"
 
@@ -75,7 +75,7 @@
 
 # Tell the console output driver that the bytes arriving are UTF-8
 # encoded multibyte sequences.
-if [ -t 1 -a -t 2 ]; then
+if [ -t 1 ] && [ -t 2 ]; then
 	printf '\033%%G'
 fi
 stty iutf8
