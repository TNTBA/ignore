--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/bin/dpkg-architecture	2022-05-24 07:40:09.000000000 -0400
+++ /media/mks/armbi_root/usr/bin/dpkg-architecture	2023-05-10 22:04:01.000000000 -0400
@@ -66,6 +66,9 @@
                             restrict architecture list matching <arch-bits>.
   -E, --match-endian <arch-endian>
                             restrict architecture list matching <arch-endian>.
+      --print-format <format>
+                            use <format> for --print-set and --print-unset,
+                              allowed values: shell (default), make.
   -f, --force               force flag (override variables set in environment).')
     . "\n", $Dpkg::PROGNAME;
 }
@@ -103,57 +106,66 @@
 }
 
 use constant {
-    DEB_NONE => 0,
-    DEB_BUILD => 1,
-    DEB_HOST => 2,
-    DEB_TARGET => 64,
-    DEB_ARCH_INFO => 4,
-    DEB_ARCH_ATTR => 8,
-    DEB_MULTIARCH => 16,
-    DEB_GNU_INFO => 32,
+    INFO_BUILD_ARCH_NAME        => 0b00001,
+    INFO_BUILD_ARCH_TUPLE       => 0b00010,
+    INFO_BUILD_ARCH_ATTR        => 0b00100,
+    INFO_BUILD_MULTIARCH        => 0b01000,
+    INFO_BUILD_GNU_TUPLE        => 0b10000,
+
+    INFO_HOST_ARCH_NAME         => 0b0000100000,
+    INFO_HOST_ARCH_TUPLE        => 0b0001000000,
+    INFO_HOST_ARCH_ATTR         => 0b0010000000,
+    INFO_HOST_MULTIARCH         => 0b0100000000,
+    INFO_HOST_GNU_TUPLE         => 0b1000000000,
+
+    INFO_TARGET_ARCH_NAME       => 0b000010000000000,
+    INFO_TARGET_ARCH_TUPLE      => 0b000100000000000,
+    INFO_TARGET_ARCH_ATTR       => 0b001000000000000,
+    INFO_TARGET_MULTIARCH       => 0b010000000000000,
+    INFO_TARGET_GNU_TUPLE       => 0b100000000000000,
 };
 
-use constant DEB_ALL => DEB_BUILD | DEB_HOST | DEB_TARGET |
-                        DEB_ARCH_INFO | DEB_ARCH_ATTR |
-                        DEB_MULTIARCH | DEB_GNU_INFO;
-
 my %arch_vars = (
-    DEB_BUILD_ARCH => DEB_BUILD,
-    DEB_BUILD_ARCH_ABI => DEB_BUILD | DEB_ARCH_INFO,
-    DEB_BUILD_ARCH_LIBC => DEB_BUILD | DEB_ARCH_INFO,
-    DEB_BUILD_ARCH_OS => DEB_BUILD | DEB_ARCH_INFO,
-    DEB_BUILD_ARCH_CPU => DEB_BUILD | DEB_ARCH_INFO,
-    DEB_BUILD_ARCH_BITS => DEB_BUILD | DEB_ARCH_ATTR,
-    DEB_BUILD_ARCH_ENDIAN => DEB_BUILD | DEB_ARCH_ATTR,
-    DEB_BUILD_MULTIARCH => DEB_BUILD | DEB_MULTIARCH,
-    DEB_BUILD_GNU_CPU => DEB_BUILD | DEB_GNU_INFO,
-    DEB_BUILD_GNU_SYSTEM => DEB_BUILD | DEB_GNU_INFO,
-    DEB_BUILD_GNU_TYPE => DEB_BUILD | DEB_GNU_INFO,
-    DEB_HOST_ARCH => DEB_HOST,
-    DEB_HOST_ARCH_ABI => DEB_HOST | DEB_ARCH_INFO,
-    DEB_HOST_ARCH_LIBC => DEB_HOST | DEB_ARCH_INFO,
-    DEB_HOST_ARCH_OS => DEB_HOST | DEB_ARCH_INFO,
-    DEB_HOST_ARCH_CPU => DEB_HOST | DEB_ARCH_INFO,
-    DEB_HOST_ARCH_BITS => DEB_HOST | DEB_ARCH_ATTR,
-    DEB_HOST_ARCH_ENDIAN => DEB_HOST | DEB_ARCH_ATTR,
-    DEB_HOST_MULTIARCH => DEB_HOST | DEB_MULTIARCH,
-    DEB_HOST_GNU_CPU => DEB_HOST | DEB_GNU_INFO,
-    DEB_HOST_GNU_SYSTEM => DEB_HOST | DEB_GNU_INFO,
-    DEB_HOST_GNU_TYPE => DEB_HOST | DEB_GNU_INFO,
-    DEB_TARGET_ARCH => DEB_TARGET,
-    DEB_TARGET_ARCH_ABI => DEB_TARGET | DEB_ARCH_INFO,
-    DEB_TARGET_ARCH_LIBC => DEB_TARGET | DEB_ARCH_INFO,
-    DEB_TARGET_ARCH_OS => DEB_TARGET | DEB_ARCH_INFO,
-    DEB_TARGET_ARCH_CPU => DEB_TARGET | DEB_ARCH_INFO,
-    DEB_TARGET_ARCH_BITS => DEB_TARGET | DEB_ARCH_ATTR,
-    DEB_TARGET_ARCH_ENDIAN => DEB_TARGET | DEB_ARCH_ATTR,
-    DEB_TARGET_MULTIARCH => DEB_TARGET | DEB_MULTIARCH,
-    DEB_TARGET_GNU_CPU => DEB_TARGET | DEB_GNU_INFO,
-    DEB_TARGET_GNU_SYSTEM => DEB_TARGET | DEB_GNU_INFO,
-    DEB_TARGET_GNU_TYPE => DEB_TARGET | DEB_GNU_INFO,
+    DEB_BUILD_ARCH          => INFO_BUILD_ARCH_NAME,
+    DEB_BUILD_ARCH_ABI      => INFO_BUILD_ARCH_NAME | INFO_BUILD_ARCH_TUPLE,
+    DEB_BUILD_ARCH_LIBC     => INFO_BUILD_ARCH_NAME | INFO_BUILD_ARCH_TUPLE,
+    DEB_BUILD_ARCH_OS       => INFO_BUILD_ARCH_NAME | INFO_BUILD_ARCH_TUPLE,
+    DEB_BUILD_ARCH_CPU      => INFO_BUILD_ARCH_NAME | INFO_BUILD_ARCH_TUPLE,
+    DEB_BUILD_ARCH_BITS     => INFO_BUILD_ARCH_NAME | INFO_BUILD_ARCH_ATTR,
+    DEB_BUILD_ARCH_ENDIAN   => INFO_BUILD_ARCH_NAME | INFO_BUILD_ARCH_ATTR,
+    DEB_BUILD_MULTIARCH     => INFO_BUILD_ARCH_NAME | INFO_BUILD_MULTIARCH,
+    DEB_BUILD_GNU_CPU       => INFO_BUILD_ARCH_NAME | INFO_BUILD_GNU_TUPLE,
+    DEB_BUILD_GNU_SYSTEM    => INFO_BUILD_ARCH_NAME | INFO_BUILD_GNU_TUPLE,
+    DEB_BUILD_GNU_TYPE      => INFO_BUILD_ARCH_NAME | INFO_BUILD_GNU_TUPLE,
+    DEB_HOST_ARCH           => INFO_HOST_ARCH_NAME,
+    DEB_HOST_ARCH_ABI       => INFO_HOST_ARCH_NAME | INFO_HOST_ARCH_TUPLE,
+    DEB_HOST_ARCH_LIBC      => INFO_HOST_ARCH_NAME | INFO_HOST_ARCH_TUPLE,
+    DEB_HOST_ARCH_OS        => INFO_HOST_ARCH_NAME | INFO_HOST_ARCH_TUPLE,
+    DEB_HOST_ARCH_CPU       => INFO_HOST_ARCH_NAME | INFO_HOST_ARCH_TUPLE,
+    DEB_HOST_ARCH_BITS      => INFO_HOST_ARCH_NAME | INFO_HOST_ARCH_ATTR,
+    DEB_HOST_ARCH_ENDIAN    => INFO_HOST_ARCH_NAME | INFO_HOST_ARCH_ATTR,
+    DEB_HOST_MULTIARCH      => INFO_HOST_ARCH_NAME | INFO_HOST_MULTIARCH,
+    DEB_HOST_GNU_CPU        => INFO_HOST_ARCH_NAME | INFO_HOST_GNU_TUPLE,
+    DEB_HOST_GNU_SYSTEM     => INFO_HOST_ARCH_NAME | INFO_HOST_GNU_TUPLE,
+    DEB_HOST_GNU_TYPE       => INFO_HOST_ARCH_NAME | INFO_HOST_GNU_TUPLE,
+    DEB_TARGET_ARCH         => INFO_TARGET_ARCH_NAME,
+    DEB_TARGET_ARCH_ABI     => INFO_TARGET_ARCH_NAME | INFO_TARGET_ARCH_TUPLE,
+    DEB_TARGET_ARCH_LIBC    => INFO_TARGET_ARCH_NAME | INFO_TARGET_ARCH_TUPLE,
+    DEB_TARGET_ARCH_OS      => INFO_TARGET_ARCH_NAME | INFO_TARGET_ARCH_TUPLE,
+    DEB_TARGET_ARCH_CPU     => INFO_TARGET_ARCH_NAME | INFO_TARGET_ARCH_TUPLE,
+    DEB_TARGET_ARCH_BITS    => INFO_TARGET_ARCH_NAME | INFO_TARGET_ARCH_ATTR,
+    DEB_TARGET_ARCH_ENDIAN  => INFO_TARGET_ARCH_NAME | INFO_TARGET_ARCH_ATTR,
+    DEB_TARGET_MULTIARCH    => INFO_TARGET_ARCH_NAME | INFO_TARGET_MULTIARCH,
+    DEB_TARGET_GNU_CPU      => INFO_TARGET_ARCH_NAME | INFO_TARGET_GNU_TUPLE,
+    DEB_TARGET_GNU_SYSTEM   => INFO_TARGET_ARCH_NAME | INFO_TARGET_GNU_TUPLE,
+    DEB_TARGET_GNU_TYPE     => INFO_TARGET_ARCH_NAME | INFO_TARGET_GNU_TUPLE,
 );
 
-my $req_vars = DEB_ALL;
+my %known_print_format = map { $_ => 1 } qw(shell make);
+my $print_format = 'shell';
+
+my %req_vars = %arch_vars;
+my $req_info = 0;
 my $req_host_arch = '';
 my $req_host_gnu_type = '';
 my $req_target_arch = '';
@@ -168,8 +180,8 @@
 my $force = 0;
 
 sub action_needs($) {
-  my $bits = shift;
-  return (($req_vars & $bits) == $bits);
+    my $bits = shift;
+    return (($req_info & $bits) == $bits);
 }
 
 @ARGV = normalize_options(args => \@ARGV, delim => '-c');
@@ -193,34 +205,38 @@
 	$req_match_endian = shift;
     } elsif ($arg eq '-e' or $arg eq '--equal') {
 	$req_eq_arch = shift;
-	$req_vars = $arch_vars{DEB_HOST_ARCH};
+        %req_vars = %arch_vars{DEB_HOST_ARCH};
 	$action = 'equal';
     } elsif ($arg eq '-i' or $arg eq '--is') {
 	$req_is_arch = shift;
-	$req_vars = $arch_vars{DEB_HOST_ARCH};
+        %req_vars = %arch_vars{DEB_HOST_ARCH};
 	$action = 'is';
     } elsif ($arg eq '-u' or $arg eq '--print-unset') {
-	$req_vars = DEB_NONE;
+        %req_vars = ();
 	$action = 'print-unset';
     } elsif ($arg eq '-l' or $arg eq '--list') {
 	$action = 'list';
     } elsif ($arg eq '-s' or $arg eq '--print-set') {
-	$req_vars = DEB_ALL;
+        %req_vars = %arch_vars;
 	$action = 'print-set';
+    } elsif ($arg eq '--print-format') {
+        $print_format = shift;
+        error(g_('%s is not a supported print format'), $print_format)
+            unless exists $known_print_format{$print_format};
     } elsif ($arg eq '-f' or $arg eq '--force') {
-        $force=1;
+        $force = 1;
     } elsif ($arg eq '-q' or $arg eq '--query') {
 	my $varname = shift;
 	error(g_('%s is not a supported variable name'), $varname)
 	    unless (exists $arch_vars{$varname});
 	$req_variable_to_print = "$varname";
-	$req_vars = $arch_vars{$varname};
+        %req_vars = %arch_vars{$varname};
         $action = 'query';
     } elsif ($arg eq '-c' or $arg eq '--command') {
-       $action = 'command';
-       last;
+        $action = 'command';
+        last;
     } elsif ($arg eq '-L' or $arg eq '--list-known') {
-        $req_vars = 0;
+        %req_vars = ();
         $action = 'list-known';
     } elsif ($arg eq '-?' or $arg eq '--help') {
         usage();
@@ -235,22 +251,32 @@
 
 my %v;
 
+# Initialize variables from environment and information to gather.
+foreach my $k (keys %req_vars) {
+    if (length $ENV{$k} && ! $force) {
+        $v{$k} = $ENV{$k};
+        delete $req_vars{$k};
+    } else {
+        $req_info |= $req_vars{$k};
+    }
+}
+
 #
 # Set build variables
 #
 
 $v{DEB_BUILD_ARCH} = get_raw_build_arch()
-    if (action_needs(DEB_BUILD));
+    if (action_needs(INFO_BUILD_ARCH_NAME));
 ($v{DEB_BUILD_ARCH_ABI}, $v{DEB_BUILD_ARCH_LIBC},
  $v{DEB_BUILD_ARCH_OS}, $v{DEB_BUILD_ARCH_CPU}) = debarch_to_debtuple($v{DEB_BUILD_ARCH})
-    if (action_needs(DEB_BUILD | DEB_ARCH_INFO));
+    if (action_needs(INFO_BUILD_ARCH_TUPLE));
 ($v{DEB_BUILD_ARCH_BITS}, $v{DEB_BUILD_ARCH_ENDIAN}) = debarch_to_abiattrs($v{DEB_BUILD_ARCH})
-    if (action_needs(DEB_BUILD | DEB_ARCH_ATTR));
+    if (action_needs(INFO_BUILD_ARCH_ATTR));
 
 $v{DEB_BUILD_MULTIARCH} = debarch_to_multiarch($v{DEB_BUILD_ARCH})
-    if (action_needs(DEB_BUILD | DEB_MULTIARCH));
+    if (action_needs(INFO_BUILD_MULTIARCH));
 
-if (action_needs(DEB_BUILD | DEB_GNU_INFO)) {
+if (action_needs(INFO_BUILD_GNU_TUPLE)) {
   $v{DEB_BUILD_GNU_TYPE} = debarch_to_gnutriplet($v{DEB_BUILD_ARCH});
   ($v{DEB_BUILD_GNU_CPU}, $v{DEB_BUILD_GNU_SYSTEM}) = split(/-/, $v{DEB_BUILD_GNU_TYPE}, 2);
 }
@@ -266,17 +292,17 @@
 # Proceed to compute the host variables if needed.
 
 $v{DEB_HOST_ARCH} = $req_host_arch || get_raw_host_arch()
-    if (action_needs(DEB_HOST));
+    if (action_needs(INFO_HOST_ARCH_NAME));
 ($v{DEB_HOST_ARCH_ABI}, $v{DEB_HOST_ARCH_LIBC},
  $v{DEB_HOST_ARCH_OS}, $v{DEB_HOST_ARCH_CPU}) = debarch_to_debtuple($v{DEB_HOST_ARCH})
-    if (action_needs(DEB_HOST | DEB_ARCH_INFO));
+    if (action_needs(INFO_HOST_ARCH_TUPLE));
 ($v{DEB_HOST_ARCH_BITS}, $v{DEB_HOST_ARCH_ENDIAN}) = debarch_to_abiattrs($v{DEB_HOST_ARCH})
-    if (action_needs(DEB_HOST | DEB_ARCH_ATTR));
+    if (action_needs(INFO_HOST_ARCH_ATTR));
 
 $v{DEB_HOST_MULTIARCH} = debarch_to_multiarch($v{DEB_HOST_ARCH})
-    if (action_needs(DEB_HOST | DEB_MULTIARCH));
+    if (action_needs(INFO_HOST_MULTIARCH));
 
-if (action_needs(DEB_HOST | DEB_GNU_INFO)) {
+if (action_needs(INFO_HOST_GNU_TUPLE)) {
     if ($req_host_gnu_type eq '') {
         $v{DEB_HOST_GNU_TYPE} = debarch_to_gnutriplet($v{DEB_HOST_ARCH});
     } else {
@@ -302,18 +328,18 @@
 
 # Proceed to compute the target variables if needed.
 
-$v{DEB_TARGET_ARCH} = $req_target_arch || $req_host_arch || get_raw_host_arch()
-    if (action_needs(DEB_TARGET));
+$v{DEB_TARGET_ARCH} = $req_target_arch || $v{DEB_HOST_ARCH} || $req_host_arch || get_raw_host_arch()
+    if (action_needs(INFO_TARGET_ARCH_NAME));
 ($v{DEB_TARGET_ARCH_ABI}, $v{DEB_TARGET_ARCH_LIBC},
  $v{DEB_TARGET_ARCH_OS}, $v{DEB_TARGET_ARCH_CPU}) = debarch_to_debtuple($v{DEB_TARGET_ARCH})
-    if (action_needs(DEB_TARGET | DEB_ARCH_INFO));
+    if (action_needs(INFO_TARGET_ARCH_TUPLE));
 ($v{DEB_TARGET_ARCH_BITS}, $v{DEB_TARGET_ARCH_ENDIAN}) = debarch_to_abiattrs($v{DEB_TARGET_ARCH})
-    if (action_needs(DEB_TARGET | DEB_ARCH_ATTR));
+    if (action_needs(INFO_TARGET_ARCH_ATTR));
 
 $v{DEB_TARGET_MULTIARCH} = debarch_to_multiarch($v{DEB_TARGET_ARCH})
-    if (action_needs(DEB_TARGET | DEB_MULTIARCH));
+    if (action_needs(INFO_TARGET_MULTIARCH));
 
-if (action_needs(DEB_TARGET | DEB_GNU_INFO)) {
+if (action_needs(INFO_TARGET_GNU_TUPLE)) {
     if ($req_target_gnu_type eq '') {
         $v{DEB_TARGET_GNU_TYPE} = debarch_to_gnutriplet($v{DEB_TARGET_ARCH});
     } else {
@@ -323,28 +349,38 @@
 }
 
 
-for my $k (keys %arch_vars) {
-    $v{$k} = $ENV{$k} if (length $ENV{$k} && !$force);
-}
-
 if ($action eq 'list') {
     foreach my $k (sort keys %arch_vars) {
 	print "$k=$v{$k}\n";
     }
 } elsif ($action eq 'print-set') {
-    foreach my $k (sort keys %arch_vars) {
-	print "$k=$v{$k}; ";
+    if ($print_format eq 'shell') {
+        foreach my $k (sort keys %arch_vars) {
+            print "$k=$v{$k}; ";
+        }
+        print 'export ' . join(' ', sort keys %arch_vars) . "\n";
+    } elsif ($print_format eq 'make') {
+        foreach my $k (sort keys %arch_vars) {
+            print "export $k = $v{$k}\n";
+        }
     }
-    print 'export ' . join(' ', sort keys %arch_vars) . "\n";
 } elsif ($action eq 'print-unset') {
-    print 'unset ' . join(' ', sort keys %arch_vars) . "\n";
+    if ($print_format eq 'shell') {
+        print 'unset ' . join(' ', sort keys %arch_vars) . "\n";
+    } elsif ($print_format eq 'make') {
+        foreach my $k (sort keys %arch_vars) {
+            print "undefine $k\n";
+        }
+    }
 } elsif ($action eq 'equal') {
     exit !debarch_eq($v{DEB_HOST_ARCH}, $req_eq_arch);
 } elsif ($action eq 'is') {
     exit !debarch_is($v{DEB_HOST_ARCH}, $req_is_arch);
 } elsif ($action eq 'command') {
     @ENV{keys %v} = values %v;
-    exec @ARGV;
+    ## no critic (TestingAndDebugging::ProhibitNoWarnings)
+    no warnings qw(exec);
+    exec @ARGV or syserr(g_('unable to execute %s'), "@ARGV");
 } elsif ($action eq 'query') {
     print "$v{$req_variable_to_print}\n";
 } elsif ($action eq 'list-known') {
