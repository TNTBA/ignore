--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/bin/automake-1.16	2018-11-04 23:03:34.000000000 -0500
+++ /media/mks/armbi_root/usr/bin/automake-1.16	2022-03-18 09:09:08.000000000 -0400
@@ -1,12 +1,7 @@
-#!/usr/bin/perl -w
-# -*- perl -*-
+#!/usr/bin/perl
+# automake - create Makefile.in from Makefile.am            -*- perl -*-
 # Generated from bin/automake.in; do not edit by hand.
-
-eval 'case $# in 0) exec /usr/bin/perl -S "$0";; *) exec /usr/bin/perl -S "$0" "$@";; esac'
-    if 0;
-
-# automake - create Makefile.in from Makefile.am
-# Copyright (C) 1994-2018 Free Software Foundation, Inc.
+# Copyright (C) 1994-2021 Free Software Foundation, Inc.
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -27,7 +22,9 @@
 
 package Automake;
 
+use 5.006;
 use strict;
+use warnings FATAL => 'all';
 
 BEGIN
 {
@@ -44,6 +41,10 @@
   $ENV{'SHELL'} = '/bin/sh' if exists $ENV{'DJDIR'};
 }
 
+use Carp;
+use File::Basename;
+use File::Spec;
+
 use Automake::Config;
 BEGIN
 {
@@ -71,9 +72,6 @@
 use Automake::RuleDef;
 use Automake::Wrap 'makefile_wrap';
 use Automake::Language;
-use File::Basename;
-use File::Spec;
-use Carp;
 
 ## ----------------------- ##
 ## Subroutine prototypes.  ##
@@ -201,11 +199,14 @@
 # ltconfig appears here for compatibility with old versions of libtool.
 my @libtool_sometimes = qw(ltconfig ltcf-c.sh ltcf-cxx.sh ltcf-gcj.sh);
 
-# Commonly found files we look for and automatically include in
-# DISTFILES.
+# Top-level files that can be foo.md instead of foo.  We assume that all
+# but THANKS are required at strictness level gnu.
+my @toplevelmd_ok = qw(AUTHORS ChangeLog INSTALL NEWS README THANKS);
+
+# Commonly found files we look for and automatically include in DISTFILES.
 my @common_files =
-    (qw(ABOUT-GNU ABOUT-NLS AUTHORS BACKLOG COPYING COPYING.DOC COPYING.LIB
-	COPYING.LESSER ChangeLog INSTALL NEWS README THANKS TODO
+    (qw(ABOUT-GNU ABOUT-NLS BACKLOG COPYING
+        COPYING.DOC COPYING.LIB COPYING.LESSER TODO
 	ar-lib compile config.guess config.rpath
 	config.sub depcomp install-sh libversion.in mdate-sh
 	missing mkinstalldirs py-compile texinfo.tex ylwrap),
@@ -1841,22 +1842,27 @@
                 {
                   # Since the next major version of automake (2.0) will
                   # make the behaviour so far only activated with the
-                  # 'subdir-object' option mandatory, it's better if we
+                  # 'subdir-objects' option mandatory, it's better if we
                   # start warning users not using that option.
                   # As suggested by Peter Johansson, we strive to avoid
                   # the warning when it would be irrelevant, i.e., if
                   # all source files sit in "current" directory.
+                  #
+                  # There are problems with making this change; see
+                  # https://bugs.gnu.org/20699 before making
+                  # subdir-objects, let alone unconditional.
+                  # (Making it non-overridable seems especially wrong.)
+                  #
                   msg_var 'unsupported', $var,
                           "source file '$full' is in a subdirectory,"
                           . "\nbut option 'subdir-objects' is disabled";
                   msg 'unsupported', INTERNAL, <<'EOF', uniq_scope => US_GLOBAL;
 possible forward-incompatibility.
-At least a source file is in a subdirectory, but the 'subdir-objects'
+At least one source file is in a subdirectory, but the 'subdir-objects'
 automake option hasn't been enabled.  For now, the corresponding output
-object file(s) will be placed in the top-level directory.  However,
-this behaviour will change in future Automake versions: they will
-unconditionally cause object files to be placed in the same subdirectory
-of the corresponding sources.
+object file(s) will be placed in the top-level directory.  However, this
+behavior may change in a future Automake major version, with object
+files being placed in the same subdirectory as the corresponding sources.
 You are advised to start using 'subdir-objects' option throughout your
 project, to avoid future incompatibilities.
 EOF
@@ -2390,7 +2396,7 @@
   $var->requires_variables ("\@${lt}LIBOBJS\@ used", $lt . 'LIBOBJS')
     if ! keys %libsources;
 
-  foreach my $iter (keys %libsources)
+  foreach my $iter (sort keys %libsources)
     {
       my $dir = '';
       if ($iter =~ /^(.*)(\.[cly])$/)
@@ -3088,8 +3094,10 @@
 
   if (! $outfile)
     {
-      err_am "'$filename' missing \@setfilename";
-      return;
+      # Replace a .texi extension with .info
+      $outfile = basename($filename);
+      $outfile =~ s/\.[^.]+$//;
+      $outfile .= '.info';
     }
 
   return ($outfile, $vfile);
@@ -3711,7 +3719,7 @@
 
     define_variable ('am__tagged_files',
                      '$(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)'
-                     . "@config", INTERNAL);
+                     . " @config", INTERNAL);
 
     if (rvar('am__tagged_files')->value_as_list_recursive
           || var ('ETAGS_ARGS') || var ('SUBDIRS'))
@@ -3809,7 +3817,7 @@
     {
       my $archive_defined = option 'no-dist-gzip' ? 0 : 1;
       $archive_defined ||=
-	grep { option "dist-$_" } qw(shar zip tarZ bzip2 lzip xz);
+	grep { option "dist-$_" } qw(shar zip tarZ bzip2 lzip xz zstd);
       error (option 'no-dist-gzip',
 	     "no-dist-gzip specified but no dist-* specified,\n"
 	     . "at least one archive format must be enabled")
@@ -3828,7 +3836,7 @@
 	  $check_aux = 1;
 	}
     }
-  foreach my $cfile (@common_files)
+  foreach my $cfile (@toplevelmd_ok, @common_files)
     {
       if (dir_has_case_matching_file ($relative_dir, $cfile)
 	  # The file might be absent, but if it can be built it's ok.
@@ -3836,13 +3844,30 @@
 	{
 	  push_dist_common ($cfile);
 	}
+      elsif (grep { $_ eq $cfile } @toplevelmd_ok)
+        { # Irritatingly, have to repeat the checks, now for .md files;
+          # we want to prefer non-.md, so do this second, and only "elsif".
+          if (dir_has_case_matching_file ($relative_dir, "$cfile.md")
+	      || rule "$cfile.md")
+  	    {
+	      push_dist_common ("$cfile.md");
+	    }
+        }
 
       # Don't use 'elsif' here because a file might meaningfully
-      # appear in both directories.
+      # appear in both $relative_dir and $config_aux_dir.
       if ($check_aux && dir_has_case_matching_file ($config_aux_dir, $cfile))
 	{
 	  push_dist_common ("$config_aux_dir/$cfile")
 	}
+      elsif ($check_aux && grep { $_ eq $cfile } @toplevelmd_ok)
+        {
+          if (dir_has_case_matching_file ($config_aux_dir, "$cfile.md")
+	      || rule "$cfile.md")
+  	    {
+	      push_dist_common ("$cfile.md");
+	    }
+        }
     }
 
   # We might copy elements from @configure_dist_common to
@@ -4258,6 +4283,9 @@
       # Use $(install_sh), not $(MKDIR_P) because the latter requires
       # at least one argument, and $(mkinstalldirs) used to work
       # even without arguments (e.g. $(mkinstalldirs) $(conditional_dir)).
+      # Also, $(MKDIR_P) uses the umask for any intermediate directories
+      # created, whereas we want them to be created with umask 022
+      # so that they are mode 755.
       define_variable ('mkinstalldirs', '$(install_sh) -d', INTERNAL);
     }
 
@@ -4689,7 +4717,7 @@
 	     DIST_CLEAN, [],
 	     MAINTAINER_CLEAN, []);
 
-  foreach my $file (keys %clean_files)
+  foreach my $file (sort keys %clean_files)
     {
       my $when = $clean_files{$file};
       prog_error 'invalid entry in %clean_files'
@@ -4759,7 +4787,7 @@
 	       . "not 'install-hook'");
 
   # Install the -local hooks.
-  foreach (keys %dependencies)
+  foreach (sort keys %dependencies)
     {
       # Hooks are installed on the -am targets.
       s/-am$// or next;
@@ -4781,7 +4809,7 @@
     }
 
   # All the required targets are phony.
-  depend ('.PHONY', keys %required_targets);
+  depend ('.PHONY', sort keys %required_targets);
 
   # Actually output gathered targets.
   foreach (sort target_cmp keys %dependencies)
@@ -4954,7 +4982,7 @@
 	  if ($handle_exeext)
 	    {
 	      unshift (@test_suffixes, $at_exeext)
-	        unless $test_suffixes[0] eq $at_exeext;
+	        unless @test_suffixes && $test_suffixes[0] eq $at_exeext;
 	    }
 	  unshift (@test_suffixes, '');
 
@@ -5111,11 +5139,12 @@
 		   "version '$package_version' doesn't follow " .
 		   "Gnits standards");
 	    }
-	  if (defined $1 && -f 'README-alpha')
+	  if (defined $1 && (-f 'README-alpha' || -f 'README-alpha.md'))
 	    {
 	      # This means we have an alpha release.  See
 	      # GNITS_VERSION_PATTERN for details.
-	      push_dist_common ('README-alpha');
+	      my $af = -f 'README-alpha' ? 'README-alpha' : 'README-alpha.md';
+	      push_dist_common ($af);
 	    }
 	}
     }
@@ -5246,16 +5275,21 @@
 		sinclude => 1,
 	      );
 
+  # Suppress all warnings from this invocation of autoconf.
+  # The user is presumably about to run autoconf themselves
+  # and will see its warnings then.
+  local $ENV{WARNINGS} = 'none';
+
   my $traces = ($ENV{AUTOCONF} || 'autoconf') . " ";
 
   # Use a separator unlikely to be used, not ':', the default, which
   # has a precise meaning for AC_CONFIG_FILES and so on.
   $traces .= join (' ',
 		   map { "--trace=$_" . ':\$f:\$l::\$d::\$n::\${::}%' }
-		   (keys %traced));
+		   (sort keys %traced));
 
+  verb "running WARNINGS=$ENV{WARNINGS} $traces";
   my $tracefh = new Automake::XFile ("$traces $filename |");
-  verb "reading $traces";
 
   @cond_stack = ();
   my $where;
@@ -5597,8 +5631,16 @@
   if ($relative_dir eq '.')
     {
       # In top level (or only) directory.
-      require_file ("$am_file.am", GNU,
-		    qw/INSTALL NEWS README AUTHORS ChangeLog/);
+
+      foreach my $file (@toplevelmd_ok)
+        {
+          next if $file eq 'THANKS'; # gnits, checked below
+          # if non-.md is absent, and .md is present, require .md;
+          # otherwise require non-.md.
+          my $required
+           = (! -f $file && -f "$file.md") ? "$file.md" : $file;
+          require_file ("$am_file.am", GNU, $required);
+        }
 
       # Accept one of these three licenses; default to COPYING.
       # Make sure we do not overwrite an existing license.
@@ -5629,7 +5671,10 @@
   if ($relative_dir eq '.')
     {
       # In top level (or only) directory.
-      require_file ("$am_file.am", GNITS, 'THANKS');
+      my $file = 'THANKS';
+      my $required
+       = (! -f $file && -f "$file.md") ? "$file.md" : $file;
+      require_file ("$am_file.am", GNITS, $file);
     }
 }
 
@@ -5722,13 +5767,24 @@
       my $c_file = $vala_file;
       if ($c_file =~ s/(.*)\.vala$/$1.c/)
         {
-          $c_file = "\$(srcdir)/$c_file";
-          $output_rules .= "$c_file: \$(srcdir)/${derived}_vala.stamp\n"
-            . "\t\@if test -f \$@; then :; else rm -f \$(srcdir)/${derived}_vala.stamp; fi\n"
+          my $built_c_file = "\$(builddir)/$c_file";
+          my $built_dir = dirname $built_c_file;
+          my $base_c_file = basename $c_file;
+          #
+          # The -newer test here is checking "C file not older than Vala
+          # file" (not "C file newer than Vala file"; see
+          # https://bugs.gnu.org/44772. The log message on the commit
+          # misleadingly says "reversed".
+          #
+          $output_rules .= "$built_c_file: \$(builddir)/${derived}_vala.stamp\n"
+            . "\t\@if test ! -f \$@ && test \$(srcdir) != \$(builddir) && test -n \"\$\$(find -L \$(srcdir)/$vala_file -prune \! -newer \$(srcdir)/$c_file)\"; then cp -p \$(srcdir)/$c_file $built_c_file; fi\n"
+            . "\t\@if test -f \$@; then :; else rm -f \$(builddir)/${derived}_vala.stamp; fi\n"
             . "\t\@if test -f \$@; then :; else \\\n"
-            . "\t  \$(MAKE) \$(AM_MAKEFLAGS) \$(srcdir)/${derived}_vala.stamp; \\\n"
+            . "\t  \$(MAKE) \$(AM_MAKEFLAGS) \$(builddir)/${derived}_vala.stamp; \\\n"
+            . "\t  if test $built_dir != .; then mv $base_c_file $built_dir/; fi \\\n"
             . "\tfi\n";
-	  $clean_files{$c_file} = MAINTAINER_CLEAN;
+	  $clean_files{$built_c_file} = DIST_CLEAN;
+	  $clean_files{"\$(srcdir)/$c_file"} = MAINTAINER_CLEAN;
         }
     }
 
@@ -5739,14 +5795,14 @@
       my $lastflag = '';
       foreach my $flag ($flags->value_as_list_recursive)
 	{
-	  if (grep (/$lastflag/, ('-H', '-h', '--header', '--internal-header',
-	                          '--vapi', '--internal-vapi', '--gir')))
+	  if (grep (/^$lastflag$/, ('-H', '-h', '--header', '--internal-header',
+	                            '--vapi', '--internal-vapi', '--gir')))
 	    {
-	      my $headerfile = "\$(srcdir)/$flag";
-	      $output_rules .= "$headerfile: \$(srcdir)/${derived}_vala.stamp\n"
-		. "\t\@if test -f \$@; then :; else rm -f \$(srcdir)/${derived}_vala.stamp; fi\n"
+	      my $headerfile = "\$(builddir)/$flag";
+	      $output_rules .= "$headerfile: \$(builddir)/${derived}_vala.stamp\n"
+		. "\t\@if test -f \$@; then :; else rm -f \$(builddir)/${derived}_vala.stamp; fi\n"
 		. "\t\@if test -f \$@; then :; else \\\n"
-		. "\t  \$(MAKE) \$(AM_MAKEFLAGS) \$(srcdir)/${derived}_vala.stamp; \\\n"
+		. "\t  \$(MAKE) \$(AM_MAKEFLAGS) \$(builddir)/${derived}_vala.stamp; \\\n"
 		. "\tfi\n";
 
 	      # valac is not used when building from dist tarballs
@@ -5754,6 +5810,21 @@
 	      push_dist_common ($headerfile);
 	      $clean_files{$headerfile} = MAINTAINER_CLEAN;
 	    }
+	  if (grep (/$lastflag/, ('--library')))
+	    {
+	      my $headerfile = "\$(builddir)/$flag";
+	      $output_rules .= "$headerfile.vapi: \$(builddir)/${derived}_vala.stamp\n"
+		. "\t\@if test -f \$@; then :; else rm -f \$(builddir)/${derived}_vala.stamp; fi\n"
+		. "\t\@if test -f \$@; then :; else \\\n"
+		. "\t  \$(MAKE) \$(AM_MAKEFLAGS) \$(builddir)/${derived}_vala.stamp; \\\n"
+		. "\tfi\n";
+
+	      # valac is not used when building from dist tarballs
+	      # distribute the generated files
+	      my $vapi = "$headerfile.vapi";
+	      push_dist_common ($vapi);
+	      $clean_files{$headerfile.'.vapi'} = MAINTAINER_CLEAN;
+	    }
 	  $lastflag = $flag;
 	}
     }
@@ -5777,10 +5848,10 @@
 
   my $verbose = verbose_flag ('VALAC');
   my $silent = silent_flag ();
-  my $stampfile = "\$(srcdir)/${derived}_vala.stamp";
+  my $stampfile = "\$(builddir)/${derived}_vala.stamp";
 
   $output_rules .=
-    "\$(srcdir)/${derived}_vala.stamp: @vala_sources\n".
+    "\$(builddir)/${derived}_vala.stamp: @vala_sources\n".
 # Since the C files generated from the vala sources depend on the
 # ${derived}_vala.stamp file, we must ensure its timestamp is older than
 # those of the C files generated by the valac invocation below (this is
@@ -5788,7 +5859,7 @@
 # Thus we need to create the stamp file *before* invoking valac, and to
 # move it to its final location only after valac has been invoked.
     "\t${silent}rm -f \$\@ && echo stamp > \$\@-t\n".
-    "\t${verbose}\$(am__cd) \$(srcdir) && $compile @vala_sources\n".
+    "\t${verbose}$compile \$^\n".
     "\t${silent}mv -f \$\@-t \$\@\n";
 
   push_dist_common ($stampfile);
@@ -5803,7 +5874,7 @@
 {
   my ($self) = @_;
 
-  foreach my $prog (keys %known_programs)
+  foreach my $prog (sort keys %known_programs)
     {
       lang_vala_finish_target ($self, $prog);
     }
@@ -6289,8 +6360,12 @@
   my ($linker, $target) = @_;
 
   # If the user wrote a custom link command, we don't define ours.
-  return "${target}_LINK"
-    if set_seen "${target}_LINK";
+  my $custom_link = "${target}_LINK";
+  if (set_seen ($custom_link))
+    {
+      my $verbose = $custom_link if var (verbose_var ($custom_link));
+      return ($custom_link, $verbose);
+    }
 
   my $xlink = $linker ? $linker : 'LINK';
 
@@ -6791,6 +6866,8 @@
 		 'GZIP'        =>  ! option 'no-dist-gzip',
 		 'SHAR'        => !! option 'dist-shar',
 		 'ZIP'         => !! option 'dist-zip',
+		 'ZSTD'        => !! option 'dist-zstd',
+		 'DIST_BUILT_SOURCES' => !! option 'dist-built-sources',
 
 		 'INSTALL-INFO' =>  ! option 'no-installinfo',
 		 'INSTALL-MAN'  =>  ! option 'no-installman',
@@ -7965,13 +8042,26 @@
   handle_all ($makefile);
 
   # FIXME: Gross!
-  if (var ('lib_LTLIBRARIES') && var ('bin_PROGRAMS'))
-    {
-      $output_rules .= "install-binPROGRAMS: install-libLTLIBRARIES\n\n";
-    }
-  if (var ('nobase_lib_LTLIBRARIES') && var ('bin_PROGRAMS'))
-    {
-      $output_rules .= "install-binPROGRAMS: install-nobase_libLTLIBRARIES\n\n";
+  my $have_lt1 = !!var("lib_LTLIBRARIES");
+  my $have_lt2 = !!var("nobase_lib_LTLIBRARIES");
+  for my $var (variables("PROGRAMS"), variables("LTLIBRARIES"))
+    {
+      if ($var->name eq "lib_LTLIBRARIES"
+          || $var->name eq "nobase_lib_LTLIBRARIES"
+          || substr($var->name, 0, 7) eq "noinst_")
+        {
+          next;
+        }
+      my $shortname = $var->name;
+      $shortname =~ tr{_}{}d;
+      if ($have_lt1)
+        {
+          $output_rules .= "install-$shortname: install-libLTLIBRARIES\n\n";
+        }
+      if ($have_lt2)
+        {
+          $output_rules .= "install-$shortname: install-nobase_libLTLIBRARIES\n\n";
+        }
     }
 
   handle_install;
@@ -8110,18 +8200,21 @@
   -f, --force-missing    force update of standard files
 
 ";
-    Automake::ChannelDefs::usage;
+    print Automake::ChannelDefs::usage (), "\n";
 
     print "\nFiles automatically distributed if found " .
           "(always):\n";
     print_autodist_files @common_files;
     print "\nFiles automatically distributed if found " .
+          "(as .md if needed):\n";
+    print_autodist_files (map { "${_}[.md]" } @toplevelmd_ok);
+    print "\nFiles automatically distributed if found " .
           "(under certain conditions):\n";
-    print_autodist_files @common_sometimes;
+    print_autodist_files @common_sometimes, 'README-alpha[.md]';
 
     print '
 Report bugs to <bug-automake@gnu.org>.
-GNU Automake home page: <http://www.gnu.org/software/automake/>.
+GNU Automake home page: <https://www.gnu.org/software/automake/>.
 General help using GNU software: <https://www.gnu.org/gethelp/>.
 ';
 
@@ -8180,10 +8273,7 @@
   set_strictness ($strict);
   my $cli_where = new Automake::Location;
   set_global_option ('no-dependencies', $cli_where) if $ignore_deps;
-  for my $warning (@warnings)
-    {
-      parse_warnings ('-W', $warning);
-    }
+  parse_warnings @warnings;
 
   return unless @ARGV;
 
