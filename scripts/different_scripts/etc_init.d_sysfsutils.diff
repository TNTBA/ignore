--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/etc/init.d/sysfsutils	2018-11-28 21:11:47.000000000 -0500
+++ /media/mks/armbi_root/etc/init.d/sysfsutils	2022-08-16 08:17:30.000000000 -0400
@@ -1,7 +1,7 @@
-#! /bin/sh -e
+#!/bin/sh
 
 ### BEGIN INIT INFO
-# Provides:          sysfsconf
+# Provides:          sysfsconf sysfsutils
 # Required-Start:    mountkernfs
 # Should-Start:      udev module-init-tools cpufrequtils
 # Required-Stop:
@@ -13,70 +13,78 @@
 #                    defaults) and /sys file permissions in /etc/sysfs.conf.
 ### END INIT INFO
 
-# /etc/init.d/sysfsutils: 
+# /etc/init.d/sysfsutils:
 #
 # (c) 2005 Martin Pitt <mpitt@debian.org>
 
+set -e
+
 CONFFILE=/etc/sysfs.conf
 CONFDIR=/etc/sysfs.d
 
-[ -r "$CONFFILE" -o -d "$CONFDIR" ] || exit 0
+if [ ! -r "$CONFFILE" ] && [ ! -d "$CONFDIR" ]; then
+  exit 0
+fi
 
+# shellcheck disable=SC1091
 . /lib/lsb/init-functions
 
 load_conffile() {
-    FILE="$1"
-    sed  's/#.*$//; /^[[:space:]]*$/d; 
-	  s/^[[:space:]]*\([^=[:space:]]*\)[[:space:]]*\([^=[:space:]]*\)[[:space:]]*=[[:space:]]*\(.*\)/\1 \2 \3/' \
-	  $FILE | {
-	while read f1 f2 f3; do
-	    if [ "$f1" = "mode" -a -n "$f2" -a -n "$f3" ]; then
-		if [ -f "/sys/$f2" ] || [ -d "/sys/$f2" ]; then
-		    chmod "$f3" "/sys/$f2"
-		else
-		    log_failure_msg "unknown attribute $f2"
-		fi
-	    elif [ "$f1" = "owner" -a -n "$f2" -a -n "$f3" ]; then
-		if [ -f "/sys/$f2" ]; then
-		    chown "$f3" "/sys/$f2"
-		else
-		    log_failure_msg "unknown attribute $f2"
-		fi
-	    elif [ "$f1" -a -n "$f2" -a -z "$f3" ]; then
-		if [ -f "/sys/$f1" ]; then
-		    # Some fields need a terminating newline, others
-		    # need the terminating newline to be absent :-(
-		     echo -n "$f2" > "/sys/$f1" 2>/dev/null ||
-			echo "$f2" > "/sys/$f1"
-		else
-		    log_failure_msg "unknown attribute $f1"
-		fi
-	    else
-		log_failure_msg "syntax error in $CONFFILE: '$f1' '$f2' '$f3'"
-		log_end_msg 1
-		exit 1
-	    fi
-	done
-    }
+  FILE="$1"
+
+  ( cat "$FILE"; echo ) |
+    sed  's/#.*$//; /^[[:space:]]*$/d;
+          s/^[[:space:]]*\([^=[:space:]]*\)[[:space:]]*\([^=[:space:]]*\)[[:space:]]*=[[:space:]]*\(.*\)/\1 \2 \3/' |
+    while read -r f1 f2 f3; do
+      if [ "$f1" = "mode" ] && [ -n "$f2" ] && [ -n "$f3" ]; then
+        if [ -f "/sys/$f2" ] || [ -d "/sys/$f2" ]; then
+          chmod "$f3" "/sys/$f2"
+        else
+          log_failure_msg "unknown attribute $f2"
+        fi
+      elif [ "$f1" = "owner" ] && [ -n "$f2" ] && [ -n "$f3" ]; then
+        if [ -f "/sys/$f2" ]; then
+          chown "$f3" "/sys/$f2"
+        else
+          log_failure_msg "unknown attribute $f2"
+        fi
+      elif [ "$f1" ] && [ -n "$f2" ] && [ -z "$f3" ]; then
+        for path in /sys/$f1; do
+          if [ -f "$path" ]; then
+            # Some fields need a terminating newline, others need the
+            # terminating newline to be absent. :-(
+            printf "%s" "$f2" >"$path" 2>/dev/null ||
+              echo "$f2" >"$path" 2>/dev/null ||
+                log_failure_msg "cannot write value for attribute $f1"
+          else
+            log_failure_msg "unknown attribute $f1"
+          fi
+        done
+      else
+        log_failure_msg "syntax error in $FILE: '$f1' '$f2' '$f3'"
+        log_action_end_msg 1
+        exit 1
+      fi
+    done
 }
 
 case "$1" in
-    start|restart|force-reload)
-	log_begin_msg "Setting sysfs variables..."
+start|restart|force-reload)
+  log_action_begin_msg "Setting sysfs variables..."
 
-	for file in $CONFFILE $CONFDIR/*.conf; do
-	    [ -r "$file" ] || continue
-	    load_conffile "$file"
-	done
-
-	log_end_msg 0
-	;;
-    stop)
-	;;
-    *)
-	echo "Usage: /etc/init.d/sysfsutils {start|stop|force-reload|restart}"
-	exit 1
-	;;
+  for file in $CONFFILE "$CONFDIR"/*.conf; do
+    [ -r "$file" ] || continue
+    load_conffile "$file"
+  done
+
+  log_action_end_msg 0
+  ;;
+status)
+  ;;
+stop)
+  ;;
+*)
+  echo "Usage: /etc/init.d/sysfsutils {start|stop|force-reload|restart|status}"
+  exit 1
+  ;;
 esac
-
-
