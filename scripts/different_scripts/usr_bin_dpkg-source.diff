--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/bin/dpkg-source	2022-05-24 07:40:09.000000000 -0400
+++ /media/mks/armbi_root/usr/bin/dpkg-source	2023-05-10 22:04:01.000000000 -0400
@@ -56,7 +56,6 @@
 textdomain('dpkg-dev');
 
 my $controlfile;
-my $changelogfile;
 my $changelogformat;
 
 my $build_format;
@@ -161,17 +160,23 @@
 	usageerr(g_('%s is not a compression level'), $comp_level)
 	    unless compression_is_valid_level($comp_level);
 	compression_set_default_level($comp_level);
+    } elsif (m/^--threads-max=(.*)$/) {
+        my $threads = $1;
+        $options{comp_threads} = $threads;
+        compression_set_threads($threads);
     } elsif (m/^-c(.*)$/) {
         $controlfile = $1;
     } elsif (m/^-l(.*)$/) {
-        $changelogfile = $1;
+        $options{changelog_file} = $1;
     } elsif (m/^-F([0-9a-z]+)$/) {
         $changelogformat = $1;
     } elsif (m/^-D([^\=:]+)[=:](.*)$/s) {
         $override{$1} = $2;
     } elsif (m/^-U([^\=:]+)$/) {
         $remove{$1} = 1;
-    } elsif (m/^-(?:i|-diff-ignore(?:$|=))(.*)$/) {
+    } elsif (m/^--diff-ignore$/) {
+        $options{diff_ignore_regex} = $diff_ignore_regex;
+    } elsif (m/^-(?:i|-diff-ignore=)(.*)$/) {
         $options{diff_ignore_regex} = $1 ? $1 : $diff_ignore_regex;
     } elsif (m/^--extend-diff-ignore=(.+)$/) {
 	$diff_ignore_regex .= "|$1";
@@ -225,13 +230,11 @@
 }
 
 if ($options{opmode} =~ /^(build|print-format|(before|after)-build|commit)$/) {
-
     $options{ARGV} = \@ARGV;
-
-    $changelogfile ||= "$dir/debian/changelog";
+    $options{changelog_file} ||= "$dir/debian/changelog";
     $controlfile ||= "$dir/debian/control";
 
-    my %ch_options = (file => $changelogfile);
+    my %ch_options = (file => $options{changelog_file});
     $ch_options{changelogformat} = $changelogformat if $changelogformat;
     my $changelog = changelog_parse(%ch_options);
     my $control = Dpkg::Control::Info->new($controlfile);
@@ -280,7 +283,7 @@
 	    my $dep;
 	    my $type = field_get_dep_type($_);
 	    $dep = deps_parse($v, build_dep => 1, union => $type eq 'union');
-	    error(g_('error occurred while parsing %s'), $_) unless defined $dep;
+	    error(g_('cannot parse %s field'), $_) unless defined $dep;
 	    my $facts = Dpkg::Deps::KnownFacts->new();
 	    $dep->simplify_deps($facts);
 	    $dep->sort() if $type eq 'union';
@@ -297,7 +300,7 @@
 	my $sect = $pkg->{'Section'} || $src_sect;
 	my $prio = $pkg->{'Priority'} || $src_prio;
 	my $type = $pkg->{'Package-Type'} ||
-	        $pkg->get_custom_field('Package-Type') || 'deb';
+            $pkg->get_custom_field('Package-Type') || 'deb';
         my $arch = $pkg->{'Architecture'};
         my $profile = $pkg->{'Build-Profiles'};
 
@@ -306,13 +309,6 @@
         $pkg_summary .= ' arch=' . join ',', split ' ', $arch;
 
         if (defined $profile) {
-            # If the string does not contain brackets then it is using the
-            # old syntax. Emit a fatal error.
-            if ($profile !~ m/^\s*<.*>\s*$/) {
-                error(g_('binary package stanza %s is using an obsolete ' .
-                         'Build-Profiles field syntax'), $p);
-            }
-
             # Instead of splitting twice and then joining twice, we just do
             # simple string replacements:
 
@@ -324,7 +320,9 @@
             $profile =~ s/\s+/,/g;
             $pkg_summary .= " profile=$profile";
         }
-
+        if (defined $pkg->{'Protected'} and $pkg->{'Protected'} eq 'yes') {
+            $pkg_summary .= ' protected=yes';
+        }
         if (defined $pkg->{'Essential'} and $pkg->{'Essential'} eq 'yes') {
             $pkg_summary .= ' essential=yes';
         }
@@ -341,7 +339,8 @@
                     push(@sourcearch, $v) unless $archadded{$v}++;
                 } else {
                     for my $a (split(/\s+/, $v)) {
-                        error(g_("'%s' is not a legal architecture string"), $a)
+                        error(g_("'%s' is not a legal architecture string " .
+                                 "in package '%s'"), $a, $p)
                             if debarch_is_illegal($a);
                         error(g_('architecture %s only allowed on its ' .
                                  "own (list for package %s is '%s')"),
@@ -444,9 +443,7 @@
 		       override => \%override,
 		       substvars => $substvars);
     exit(0);
-
 } elsif ($options{opmode} eq 'extract') {
-
     # Check command line
     unless (scalar(@ARGV)) {
         usageerr(g_('--%s needs at least one argument, the .dsc'),
@@ -531,6 +528,11 @@
     return if $fields->{'Testsuite-Triggers'};
 
     foreach my $test ($tests->get()) {
+        if (not exists $test->{Tests} and not exists $test->{'Test-Command'}) {
+            error(g_('test control %s is missing %s or %s field'),
+                  'debian/tests/control', 'Tests', 'Test-Command');
+        }
+
         next unless $test->{Depends};
 
         my $deps = deps_parse($test->{Depends}, use_arch => 0, tests_dep => 1);
@@ -556,12 +558,12 @@
 
 sub print_option {
     my $opt = shift;
-    my $help;
 
+    my $help = gettext($opt->{help});
     if (length $opt->{name} > 25) {
-        $help .= sprintf "  %-25s\n%s%s.\n", $opt->{name}, ' ' x 27, $opt->{help};
+        return sprintf "  %-25s\n%s%s.\n", $opt->{name}, ' ' x 27, $help;
     } else {
-        $help .= sprintf "  %-25s%s.\n", $opt->{name}, $opt->{help};
+        return sprintf "  %-25s%s.\n", $opt->{name}, $help;
     }
 }
 
@@ -652,6 +654,8 @@
     get_format_help()
     . "\n" . g_(
 'General options:
+      --threads-max=<threads>
+                           use at most <threads> with compressor.
   -q                       quiet mode.
   -?, --help               show this help message.
       --version            show the version.')
