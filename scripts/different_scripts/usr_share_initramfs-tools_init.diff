--- /media/mks/5dcae443-0796-4029-ae6c-bf5bd2a37067/usr/share/initramfs-tools/init	2019-08-22 21:11:27.000000000 -0400
+++ /media/mks/armbi_root/usr/share/initramfs-tools/init	2022-04-10 15:59:31.000000000 -0400
@@ -34,6 +34,13 @@
 # Note that this only becomes /dev on the real filesystem if udev's scripts
 # are used; which they will be, but it's worth pointing out
 mount -t devtmpfs -o nosuid,mode=0755 udev /dev
+
+# Prepare the /dev directory
+[ ! -h /dev/fd ] && ln -s /proc/self/fd /dev/fd
+[ ! -h /dev/stdin ] && ln -s /proc/self/fd/0 /dev/stdin
+[ ! -h /dev/stdout ] && ln -s /proc/self/fd/1 /dev/stdout
+[ ! -h /dev/stderr ] && ln -s /proc/self/fd/2 /dev/stderr
+
 mkdir /dev/pts
 mount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || true
 
@@ -122,10 +129,6 @@
 		;;
 	resume=*)
 		RESUME="${x#resume=}"
-		case $RESUME in
-		UUID=*)
-			RESUME="/dev/disk/by-uuid/${RESUME#UUID=}"
-		esac
 		;;
 	resume_offset=*)
 		resume_offset="${x#resume_offset=}"
@@ -138,11 +141,6 @@
 		;;
 	panic=*)
 		panic="${x#panic=}"
-		case ${panic} in
-		*[![:digit:].]*)
-			panic=
-			;;
-		esac
 		;;
 	ro)
 		readonly=y
@@ -176,7 +174,7 @@
 		;;
 	netconsole=*)
 		netconsole=${x#netconsole=}
-		[ "x$debug" = "xy" ] && log_output=/dev/kmsg
+		[ "$debug" = "y" ] && log_output=/dev/kmsg
 		;;
 	BOOTIF=*)
 		BOOTIF=${x#BOOTIF=}
@@ -207,8 +205,8 @@
 	resume=${RESUME:-}
 fi
 
-mount -t tmpfs -o "noexec,nosuid,size=${RUNSIZE:-10%},mode=0755" tmpfs /run
-mkdir -m 0755 /run/initramfs
+mount -t tmpfs -o "nodev,noexec,nosuid,size=${RUNSIZE:-10%},mode=0755" tmpfs /run
+mkdir -m 0700 /run/initramfs
 
 if [ -n "$log_output" ]; then
 	exec >$log_output 2>&1
@@ -222,12 +220,16 @@
 
 maybe_break modules
 [ "$quiet" != "y" ] && log_begin_msg "Loading essential drivers"
-[ -n "${netconsole}" ] && modprobe netconsole netconsole="${netconsole}"
+[ -n "${netconsole}" ] && /sbin/modprobe netconsole netconsole="${netconsole}"
 load_modules
 [ "$quiet" != "y" ] && log_end_msg
 
+starttime="$(_uptime)"
+starttime=$((starttime + 1)) # round up
+export starttime
+
 if [ "$ROOTDELAY" ]; then
-	sleep $ROOTDELAY
+	sleep "$ROOTDELAY"
 fi
 
 maybe_break premount
@@ -318,6 +320,7 @@
 unset fastboot
 unset forcefsck
 unset fsckfix
+unset starttime
 
 # Move virtual filesystems over to the real filesystem
 mount -n -o move /sys ${rootmnt}/sys
